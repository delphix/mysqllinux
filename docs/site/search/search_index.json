{
    "docs": [
        {
            "location": "/index.html",
            "text": "Overview\n\u00b6\n\n\nDelphix Integrations(dxi) is Delphix's response to address the lack of data agility that many organizations face today in their DevOps, ProdOps and AI/ML workflows. \nMany of these ecosystems have solved the automation of code and infrastructure, but still face data bottlenecks. \nOur focus is to simplify the integration of Delphix operations into these ecosystems and to provide data agility to developers, testers, analysts and administrators.\n\n\ndxi, the first release from Delphix Integrations project, is a CLI and a Python Library, designed to easily automate Delphix operations that are commonly used in workflows.\nWe recognize that despite being fully-featured, Delphix APIs were hard to use. \nEven a simple operation requires multiple nested configuration arguments that users may not necessarily be aware of. \ndxi takes a much simpler approach and minimizes the knowledge required to automate Delphix Data virtualization operations.\n\n\nWe also recognize that some users prefer out-of-the-box integrations with third party tools. \nTo address this need, future iterations of Delphix Integrations will feature Delphix support for the most popular developer tools.\n\n\nPython library (dxi library)\n\u00b6\n\n\nThe dxi library is an interface for developing Python applications that can run Virtualization and Self-Service operations on single or multiple Delphix Engines.\n\n\nWe chose Python because it is our customers\u2019 language of choice when creating DevOps, ProdOps and AI/ML workflows due to its flexibility, extensibility and support.\n\n\nExample Usage: \n\n    \nfrom\n \ndxi.database.dxi_refresh\n \nimport\n \nDXIRefresh\n     \n\n    \nref\n \n=\n \nDXIRefresh\n()\n\n    \nref\n.\nrefresh\n(\nname\n=\n\u201c\nvirtualdb1\n\u201d\n)\n\n\n\n\nCommand line interface (dxi cli)\n\u00b6\n\n\ndxi cli is an interface for calling Delphix operations from the command line. \nIt is intended to work on different OS platforms and will soon be provided as a set of compiled executables for ease of use and compatibility.\n\n\nExample Usage:\n\n    dxi database refresh --name virtualdb1\n\n\n\nWhere to start\n\u00b6\n\n\nIf you are not familiar with Delphix, we recommend you to start with our \nDocumentation\n.\n\n\nIf you are already familiar with Delphix, but want to learn more about dxi, \nplease read the \nGetting started\n section or jump to Building Your Integrations section for some real world examples.\n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "Overview"
        },
        {
            "location": "/index.html#overview",
            "text": "Delphix Integrations(dxi) is Delphix's response to address the lack of data agility that many organizations face today in their DevOps, ProdOps and AI/ML workflows. \nMany of these ecosystems have solved the automation of code and infrastructure, but still face data bottlenecks. \nOur focus is to simplify the integration of Delphix operations into these ecosystems and to provide data agility to developers, testers, analysts and administrators.  dxi, the first release from Delphix Integrations project, is a CLI and a Python Library, designed to easily automate Delphix operations that are commonly used in workflows.\nWe recognize that despite being fully-featured, Delphix APIs were hard to use. \nEven a simple operation requires multiple nested configuration arguments that users may not necessarily be aware of. \ndxi takes a much simpler approach and minimizes the knowledge required to automate Delphix Data virtualization operations.  We also recognize that some users prefer out-of-the-box integrations with third party tools. \nTo address this need, future iterations of Delphix Integrations will feature Delphix support for the most popular developer tools.",
            "title": "Overview"
        },
        {
            "location": "/index.html#python-library-dxi-library",
            "text": "The dxi library is an interface for developing Python applications that can run Virtualization and Self-Service operations on single or multiple Delphix Engines.  We chose Python because it is our customers\u2019 language of choice when creating DevOps, ProdOps and AI/ML workflows due to its flexibility, extensibility and support.  Example Usage:       from   dxi.database.dxi_refresh   import   DXIRefresh      \n\n     ref   =   DXIRefresh () \n     ref . refresh ( name = \u201c virtualdb1 \u201d )",
            "title": "Python library (dxi library)"
        },
        {
            "location": "/index.html#command-line-interface-dxi-cli",
            "text": "dxi cli is an interface for calling Delphix operations from the command line. \nIt is intended to work on different OS platforms and will soon be provided as a set of compiled executables for ease of use and compatibility.  Example Usage:     dxi database refresh --name virtualdb1",
            "title": "Command line interface (dxi cli)"
        },
        {
            "location": "/index.html#where-to-start",
            "text": "If you are not familiar with Delphix, we recommend you to start with our  Documentation .  If you are already familiar with Delphix, but want to learn more about dxi, \nplease read the  Getting started  section or jump to Building Your Integrations section for some real world examples.",
            "title": "Where to start"
        },
        {
            "location": "/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/GettingStarted/index.html",
            "text": "Getting Started\n\u00b6\n\n\ndxi is a Python Library and CLI that is available for download from download.delphix.com, \nPyPI\n and Dockerhub.\nInstall dxi to your local environment or server(s) from where you would initiate the Delphix operations.\n\n\ndxi consists of two parts:\n\n\n\n\nThe dxi python library\n\n\nThe dxi command line interface (cli)\n\n\n\n\nThe dxi library exposes expose objects amd methods to easily initiate a Delphix operation programmatically.\n\n\nThe dxi cli exposes a command line interface to initiate the same Delphix operations from your terminal.\n\n\nRequirements\n\u00b6\n\n\n\n\nmacOS 10.15+, Windows 10\n\n\nPython 3.7 or above (Python versions <=3.6 are not supported)    \n\n\nDelphix Engine 5.3.9 or above\n\n\n\n\nInstalling dxi\n\u00b6\n\n\n\n\nUse a Virtual Environment\n\n\nIf you are using dxi library for development, we recommend that you do this inside a virtual environment.\nTo learn more about virtual environments, refer to \nVirtualenv's documentation\n.\n\n\nThe virtual environment needs to use Python 3.7 or higher.\n\n\n\n\nFrom Delphix Downloads Portal\n\u00b6\n\n\ndxi executable CLI\n\u00b6\n\n\ndxi cli is available in the form of compiled binaries for the following platforms at download.delphix.com\n\n\n\n\nmacOS\n\n\nWindows10\n\n\nRHEL7, RHEL8\n\n\n\n\nDownload the distribution for your OS platform into your local environment.\n\n\n\n\nUS.UTF-8 Locale Error\n\n\nIf you get an error related to US.UTF-8 Locale, then run the following before executing dxi\n\n\nexport LC_ALL=en_US.UTF-8\n\n\n\n\n\n\ndxi Python CLI and Library\n\u00b6\n\n\n\n\n\n\nDownload the \ndxi-x.y.z.zip\n from download.delphix.com  \n\n\n\n\n\n\nCopy dxi.tar to the directory where you want to install dxi\n\n\n\n\n\n\nUnzip the contents of the tar file. You should see a setup.py file in the extracted contents.\n\n    \n    tar -xvf dxi-x.y.z.tar\n\n\n\n\n\nInstall dxi\n    \n    pip3 install .     \n\n\n\n\n\nFrom Dockerfile\n\u00b6\n\n\ndxi Dockerfile is available at download.delphix.com. It can be used to build dxi docker image locally for overriding one or more of the following arguments for advanced use-cases:\n\n\n\n\nDXI_GID (ARG) - container's user id\n\n\nDXI_UID (ARG) - user's group id\n\n\nDXI_VERSION (ARG) - dxi version\n\n\nDXI_DATA (ENV) - path that will be used by dxi to read configuration and save logs.\n\n\n\n\nTo build the latest version dxi container:\n\n    docker build -t IMAGE_NAME /path/to/Dockerfile\n\n\n\nFrom PyPI\n\u00b6\n\n\nTo install the latest version dxi\n\n    pip3 install dxi\n\n\n\nFrom Dockerhub\n\u00b6\n\n\ndxi docker container image is available at Dockerhub under \"delphix\" organization repository.\n\n\nTo run the latest version dxi in interactive mode:\n\n    docker run -it --entrypoint\n=\nbash delphix/dxi\n\n\n\nTo run the latest version dxi in one-liner mode:\n\n    docker run -v /path/to/config:/dxi-data/config delphix/dxi \ncommand\n\n\n\n\nTest your installation\n\u00b6\n\n\nRun the following command to verify that your installation was successful\n\n\n    dxi --help\n\n\nYou should see the dxi cli options as shown below\n\n        Usage: dxi [OPTIONS] COMMAND [ARGS]...\n\n          This is the main CLI command\n\n        Options:\n          --version  Show the version and exit.\n          --help     Show this message and exit.\n\n        Commands:\n          bookmark     Group command for Self-Service Bookmark operations\n          branch       Group command for Self-Service Branch operations\n          config       Group command for config file encryption related operations          \n          container    Group command for Self-Service Container operations\n          database     Group command for Database (dsource, vdb, vfiles) operations\n          environment  Group command for Environment operations\n          snapshot     Group command for Snapshot operations\n          template     Group command for Self-Service Template operations\n\n\n\nConfiguring dxi\n\u00b6\n\n\nGreat! You have installed the dxi cli and library successfully.\n\nLet us now configure dxi to connect with your Delphix Engines.\n\n\nStep 1: Initialize dxi\n\u00b6\n\n\nTo initialize dxi, run\n\n\n    dxi config init\n\n\nThis will do 2 things\n1. Create a config folder and config file for dxi\n2. Create a logs folder for dxi\n\n\nStep 2: Add Delphix Engines to config file\n\u00b6\n\n\nConfiguration File\n\u00b6\n\n\nBy default, dxi reads your Delphix engine configuration from a json file named dxtools.conf.\nIf you already ran the init command, dxi should have  created the required directories and config file.\n\n\nNext, let's update the config file with the information of your Delphix Engines.\n\n\nWhere's your config file?\n\u00b6\n\n\ndxi Python CLI and Library\nIf you installed dxi as a Python Library and (or) Python CLI, then this section is for you.\n\n\n    <your_python_install_dir>/site-packages/dxi-data/config/dxtools.conf\n\n\n\n\n\nHow to find location of your site-packages?\n\n\nRun the following command on your terminal.\n\n    python -m site\n\n\nThe site-packages directory will be listed under \nsys.path\n\n\nsys.path = [\n    '/usr/local/Cellar/python@3.9/3.9.0_5/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload',\n\n    '/Users/username/environments/env/lib/python3.9/site-packages',\n\n]\n\n\n\n\n\ndxi executable cli\nIf you are using the precompiled version of dxi cli, then this section is for you.\n\n\n    <location-of-dxi-executable>/dxi-data/config/dxtools.conf\n\n\n\nConfig File Structure\n\u00b6\n\n\n    \n{\n\n      \n\"name\"\n:\n \n[\n\n        \n{\n\n          \n\"ip_address\"\n:\n \n\"2.222.222.222\"\n,\n\n          \n\"username\"\n:\n \n\"username\"\n,\n\n          \n\"password\"\n:\n \n\"password\"\n,\n\n          \n\"use_https\"\n:\n \n\"False\"\n,\n\n          \n\"default\"\n:\n \n\"False\"\n,\n\n          \n\"encrypted\"\n:\n \n\"false\"\n,\n\n          \n\"hostname\"\n:\n \n\"engine_host_name_1\"\n\n        \n}\n\n      \n],\n\n      \n\"name\"\n:\n \n[\n\n        \n{\n\n          \n\"ip_address\"\n:\n \n\"1.111.22.111\"\n,\n\n          \n\"username\"\n:\n \n\"admin\"\n,\n\n          \n\"password\"\n:\n \n\"delphix\"\n,\n\n          \n\"use_https\"\n:\n \n\"True\"\n,\n\n          \n\"default\"\n:\n \n\"True\"\n,\n\n          \n\"encrypted\"\n:\n \n\"false\"\n,\n          \n          \n\"hostname\"\n:\n \n\"engine_host_name_2\"\n\n        \n}\n\n      \n]\n  \n    \n}\n\n\n\n\nDescription of Fields\n\u00b6\n\n\n\n\nname - Friendly name used to identify a Delphix Engine. This is the identifier dxi uses for an engine.\n\n\nip_address - Delphix Engine IP address or hostname\n\n\nusername - Delphix username\n\n\npassword - Delphix username password\n\n\nport - Port number to communicate with the engine - 80 | 443\n\n\ndefault - Is this Delphix Engine, a default one - true | false\n\n\nuse_https - What protocol will be used for communication - true | false\n\n\nhostname - This can be same as the name field. This value is used for debug logging.\n\n\n\n\nSpecify your own config file\n\u00b6\n\n\nYou can provide your own config file for dxi as shown below.\nPlease ensure that the json format of the provided file conforms to the sample show above.\n\n\ndxi cli:\n\n\n    dxi database refresh --config /full/path/with/configfile/name\n\n\n\ndxi library:\n\n\n    \nref\n \n=\n \nDXIRefresh\n(\nconfig\n=\n\"/full/path/with/configfile/name\"\n)\n\n\n\n\nEncryption\n\u00b6\n\n\ndxi provides the ability to encrypt username and password fields inside the config file,\nso that the credentials to your Delphix Engine are not visible in plain text.\n\n\n\n\nWhen your config file is encrypted\n\n\nYou will have to re-run the encryption process on a config file if,   \n\n\n\n\nYou copy an already encrypted config file from one machine to another\n\n\nYou changed IP address of an engine in an already encrypted config file.\n\n\n\n\n\n\n\n\nWhen dxi is running inside docker container\n\n\n\n\nAt this point, dxi docker container does not support the encryption of config file ( dxtools.conf ). This support will be added in a future release.\n\n\n\n\n\n\nAll Engines\n\u00b6\n\n\nTo encrypt usernames and passwords for all Delphix engines in a config file,\n\n\n\n\nAdd your username and password information in plain text into the config file\n\n\nUse the dxi config encrypt command as shown below to encrypt the config file.\n\n\n\n\nEncrypting default dxtools.conf file\n\n\n    dxi config encrypt\n\n\n\nEncrypting your own config file\n\n\n    dxi config encrypt --config /full/path/to/file/with/filename\n\n\n\nYou will now see that the username and password information has been obfuscated\nand the \"encrypted\" key for all engines have been set to \"true\"\n\n\nSingle Engine\n\u00b6\n\n\nSometimes, you may need to update information related to a single Delphix Engine or add a new Delphix Engine to a config file that's already encrypted.\nHere's how\n\n\n\n\nAdd/Update the Delphix Engine information in the file.\n  The username/password for the new/updated Delphix Engine must be in plain text and \"encrypted\" key must be set to \"false\".\n\n\nMake sure all other Delphix Engines have \"encrypted\" key set to \"true\" so that we don't re-encrypt their usernames and passwords.\n\n\nUse the dxi config encrypt command as shown below to encrypt the config file.\n\n\n\n\n    dxi config encrypt\n\n\n\nDone, What's Next?\n\u00b6\n\n\nYou have set up and configured dxi on your environment.    \n\n\nFor information on how to use dxi as a CLI, refer to \nCLI References\n section under References\nFor information on how to use dxi as a Library, refer to \nLibrary References\n section under References\n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "Getting Started"
        },
        {
            "location": "/GettingStarted/index.html#getting-started",
            "text": "dxi is a Python Library and CLI that is available for download from download.delphix.com,  PyPI  and Dockerhub.\nInstall dxi to your local environment or server(s) from where you would initiate the Delphix operations.  dxi consists of two parts:   The dxi python library  The dxi command line interface (cli)   The dxi library exposes expose objects amd methods to easily initiate a Delphix operation programmatically.  The dxi cli exposes a command line interface to initiate the same Delphix operations from your terminal.",
            "title": "Getting Started"
        },
        {
            "location": "/GettingStarted/index.html#requirements",
            "text": "macOS 10.15+, Windows 10  Python 3.7 or above (Python versions <=3.6 are not supported)      Delphix Engine 5.3.9 or above",
            "title": "Requirements"
        },
        {
            "location": "/GettingStarted/index.html#installing-dxi",
            "text": "Use a Virtual Environment  If you are using dxi library for development, we recommend that you do this inside a virtual environment.\nTo learn more about virtual environments, refer to  Virtualenv's documentation .  The virtual environment needs to use Python 3.7 or higher.",
            "title": "Installing dxi"
        },
        {
            "location": "/GettingStarted/index.html#from-delphix-downloads-portal",
            "text": "",
            "title": "From Delphix Downloads Portal"
        },
        {
            "location": "/GettingStarted/index.html#dxi-executable-cli",
            "text": "dxi cli is available in the form of compiled binaries for the following platforms at download.delphix.com   macOS  Windows10  RHEL7, RHEL8   Download the distribution for your OS platform into your local environment.   US.UTF-8 Locale Error  If you get an error related to US.UTF-8 Locale, then run the following before executing dxi  export LC_ALL=en_US.UTF-8",
            "title": "dxi executable CLI"
        },
        {
            "location": "/GettingStarted/index.html#dxi-python-cli-and-library",
            "text": "Download the  dxi-x.y.z.zip  from download.delphix.com      Copy dxi.tar to the directory where you want to install dxi    Unzip the contents of the tar file. You should see a setup.py file in the extracted contents. \n         tar -xvf dxi-x.y.z.tar   Install dxi\n         pip3 install .",
            "title": "dxi Python CLI and Library"
        },
        {
            "location": "/GettingStarted/index.html#from-dockerfile",
            "text": "dxi Dockerfile is available at download.delphix.com. It can be used to build dxi docker image locally for overriding one or more of the following arguments for advanced use-cases:   DXI_GID (ARG) - container's user id  DXI_UID (ARG) - user's group id  DXI_VERSION (ARG) - dxi version  DXI_DATA (ENV) - path that will be used by dxi to read configuration and save logs.   To build the latest version dxi container:     docker build -t IMAGE_NAME /path/to/Dockerfile",
            "title": "From Dockerfile"
        },
        {
            "location": "/GettingStarted/index.html#from-pypi",
            "text": "To install the latest version dxi     pip3 install dxi",
            "title": "From PyPI"
        },
        {
            "location": "/GettingStarted/index.html#from-dockerhub",
            "text": "dxi docker container image is available at Dockerhub under \"delphix\" organization repository.  To run the latest version dxi in interactive mode:     docker run -it --entrypoint = bash delphix/dxi  To run the latest version dxi in one-liner mode:     docker run -v /path/to/config:/dxi-data/config delphix/dxi  command",
            "title": "From Dockerhub"
        },
        {
            "location": "/GettingStarted/index.html#test-your-installation",
            "text": "Run the following command to verify that your installation was successful      dxi --help \nYou should see the dxi cli options as shown below         Usage: dxi [OPTIONS] COMMAND [ARGS]...\n\n          This is the main CLI command\n\n        Options:\n          --version  Show the version and exit.\n          --help     Show this message and exit.\n\n        Commands:\n          bookmark     Group command for Self-Service Bookmark operations\n          branch       Group command for Self-Service Branch operations\n          config       Group command for config file encryption related operations          \n          container    Group command for Self-Service Container operations\n          database     Group command for Database (dsource, vdb, vfiles) operations\n          environment  Group command for Environment operations\n          snapshot     Group command for Snapshot operations\n          template     Group command for Self-Service Template operations",
            "title": "Test your installation"
        },
        {
            "location": "/GettingStarted/index.html#configuring-dxi",
            "text": "Great! You have installed the dxi cli and library successfully. \nLet us now configure dxi to connect with your Delphix Engines.",
            "title": "Configuring dxi"
        },
        {
            "location": "/GettingStarted/index.html#step-1-initialize-dxi",
            "text": "To initialize dxi, run      dxi config init \nThis will do 2 things\n1. Create a config folder and config file for dxi\n2. Create a logs folder for dxi",
            "title": "Step 1: Initialize dxi"
        },
        {
            "location": "/GettingStarted/index.html#step-2-add-delphix-engines-to-config-file",
            "text": "",
            "title": "Step 2: Add Delphix Engines to config file"
        },
        {
            "location": "/GettingStarted/index.html#configuration-file",
            "text": "By default, dxi reads your Delphix engine configuration from a json file named dxtools.conf.\nIf you already ran the init command, dxi should have  created the required directories and config file.  Next, let's update the config file with the information of your Delphix Engines.",
            "title": "Configuration File"
        },
        {
            "location": "/GettingStarted/index.html#wheres-your-config-file",
            "text": "dxi Python CLI and Library\nIf you installed dxi as a Python Library and (or) Python CLI, then this section is for you.      <your_python_install_dir>/site-packages/dxi-data/config/dxtools.conf   How to find location of your site-packages?  Run the following command on your terminal.     python -m site \nThe site-packages directory will be listed under  sys.path  sys.path = [\n    '/usr/local/Cellar/python@3.9/3.9.0_5/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload',     '/Users/username/environments/env/lib/python3.9/site-packages', ]   dxi executable cli\nIf you are using the precompiled version of dxi cli, then this section is for you.      <location-of-dxi-executable>/dxi-data/config/dxtools.conf",
            "title": "Where's your config file?"
        },
        {
            "location": "/GettingStarted/index.html#config-file-structure",
            "text": "{ \n       \"name\" :   [ \n         { \n           \"ip_address\" :   \"2.222.222.222\" , \n           \"username\" :   \"username\" , \n           \"password\" :   \"password\" , \n           \"use_https\" :   \"False\" , \n           \"default\" :   \"False\" , \n           \"encrypted\" :   \"false\" , \n           \"hostname\" :   \"engine_host_name_1\" \n         } \n       ], \n       \"name\" :   [ \n         { \n           \"ip_address\" :   \"1.111.22.111\" , \n           \"username\" :   \"admin\" , \n           \"password\" :   \"delphix\" , \n           \"use_https\" :   \"True\" , \n           \"default\" :   \"True\" , \n           \"encrypted\" :   \"false\" ,           \n           \"hostname\" :   \"engine_host_name_2\" \n         } \n       ]   \n     }",
            "title": "Config File Structure"
        },
        {
            "location": "/GettingStarted/index.html#description-of-fields",
            "text": "name - Friendly name used to identify a Delphix Engine. This is the identifier dxi uses for an engine.  ip_address - Delphix Engine IP address or hostname  username - Delphix username  password - Delphix username password  port - Port number to communicate with the engine - 80 | 443  default - Is this Delphix Engine, a default one - true | false  use_https - What protocol will be used for communication - true | false  hostname - This can be same as the name field. This value is used for debug logging.",
            "title": "Description of Fields"
        },
        {
            "location": "/GettingStarted/index.html#specify-your-own-config-file",
            "text": "You can provide your own config file for dxi as shown below.\nPlease ensure that the json format of the provided file conforms to the sample show above.  dxi cli:      dxi database refresh --config /full/path/with/configfile/name  dxi library:       ref   =   DXIRefresh ( config = \"/full/path/with/configfile/name\" )",
            "title": "Specify your own config file"
        },
        {
            "location": "/GettingStarted/index.html#encryption",
            "text": "dxi provides the ability to encrypt username and password fields inside the config file,\nso that the credentials to your Delphix Engine are not visible in plain text.   When your config file is encrypted  You will have to re-run the encryption process on a config file if,      You copy an already encrypted config file from one machine to another  You changed IP address of an engine in an already encrypted config file.     When dxi is running inside docker container   At this point, dxi docker container does not support the encryption of config file ( dxtools.conf ). This support will be added in a future release.",
            "title": "Encryption"
        },
        {
            "location": "/GettingStarted/index.html#all-engines",
            "text": "To encrypt usernames and passwords for all Delphix engines in a config file,   Add your username and password information in plain text into the config file  Use the dxi config encrypt command as shown below to encrypt the config file.   Encrypting default dxtools.conf file      dxi config encrypt  Encrypting your own config file      dxi config encrypt --config /full/path/to/file/with/filename  You will now see that the username and password information has been obfuscated\nand the \"encrypted\" key for all engines have been set to \"true\"",
            "title": "All Engines"
        },
        {
            "location": "/GettingStarted/index.html#single-engine",
            "text": "Sometimes, you may need to update information related to a single Delphix Engine or add a new Delphix Engine to a config file that's already encrypted.\nHere's how   Add/Update the Delphix Engine information in the file.\n  The username/password for the new/updated Delphix Engine must be in plain text and \"encrypted\" key must be set to \"false\".  Make sure all other Delphix Engines have \"encrypted\" key set to \"true\" so that we don't re-encrypt their usernames and passwords.  Use the dxi config encrypt command as shown below to encrypt the config file.       dxi config encrypt",
            "title": "Single Engine"
        },
        {
            "location": "/GettingStarted/index.html#done-whats-next",
            "text": "You have set up and configured dxi on your environment.      For information on how to use dxi as a CLI, refer to  CLI References  section under References\nFor information on how to use dxi as a Library, refer to  Library References  section under References",
            "title": "Done, What's Next?"
        },
        {
            "location": "/GettingStarted/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/References/CLI_References/environment/index.html",
            "text": "Environment\n\u00b6\n\n\nAn Environment in Delphix is a Windows/ Linux / Unix Host that has been linked to Delphix. \nAn Environment may be a Source Host, Staging Host or Target Host\n\n\ndxi provides commands to trigger some of the most commonly used environment related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below  \n\n\n\n\ndxi : The main CLI  \n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'environment'   \n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and optional parameters for the operation\n\n\n\n\n   dxi environment <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available actions on an environment are \n\n\n\n\nadd - Adds an environment\n\n\ndelete - Deletes an environment\n\n\nupdateHost - Updates the IP address on an existing environment\n\n\nrefresh - Refreshes an existing environment\n\n\nlist - Lists all environments \n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n\n   dxi environment <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi environment --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi environment <operation> --help",
            "title": "Environment"
        },
        {
            "location": "/References/CLI_References/environment/index.html#environment",
            "text": "An Environment in Delphix is a Windows/ Linux / Unix Host that has been linked to Delphix. \nAn Environment may be a Source Host, Staging Host or Target Host  dxi provides commands to trigger some of the most commonly used environment related operations",
            "title": "Environment"
        },
        {
            "location": "/References/CLI_References/environment/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below     dxi : The main CLI    command : Indicates the Delphix object you will be working on. In this case,'environment'     Operation : The operation that you are performing on the Delphix object  Options: Required and optional parameters for the operation      dxi environment <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/environment/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available actions on an environment are    add - Adds an environment  delete - Deletes an environment  updateHost - Updates the IP address on an existing environment  refresh - Refreshes an existing environment  list - Lists all environments",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/environment/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.    dxi environment <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/environment/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/environment/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi environment --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/environment/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi environment <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/database/index.html",
            "text": "Database\n\u00b6\n\n\nA Database refers to any dataset in Delphix.\n\nA Database can be a source (dsource) or virtual (vdb or vfiles) database.\n\n\ndxi provides commands to trigger some of the most commonly used database related operations.  \n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi: The main CLI\n\n\ncommand: Indicates the Delphix object you will be working on. In this case,'database'.\n\n\nOperation: The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi database <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on a Delphix Engine. \n\nThe  available actions on a database are\n\n\n\n\ndelete - Delete a Delphix dSource or VDB.\n\n\ndisable - Disable a virtual dataset by name and group (optional).\n\n\nenable - Enable a virtual dataset by name and group (optional).\n\n\ningest - Ingest source data to create a dsource.\n\n\nlist - List all datasets on an engine.\n\n\nprovision - Provision Delphix Virtual Databases and vFiles.\n\n\nrefresh - Refresh a Delphix VDB or vFile.\n\n\nrewind - Rewind a VDB or vFile.\n\n\nstart - Starts a virtual dataset by name and group (optional).\n\n\nstop - Stop a virtual dataset by name and group (optional).\n\n\n\n\n*Support for additional databases and operations will come soon.\n\u00b6\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n \ndxi database <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi database --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi database <operation> --help",
            "title": "Database"
        },
        {
            "location": "/References/CLI_References/database/index.html#database",
            "text": "A Database refers to any dataset in Delphix. \nA Database can be a source (dsource) or virtual (vdb or vfiles) database.  dxi provides commands to trigger some of the most commonly used database related operations.",
            "title": "Database"
        },
        {
            "location": "/References/CLI_References/database/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi: The main CLI  command: Indicates the Delphix object you will be working on. In this case,'database'.  Operation: The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi database <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/database/index.html#operations",
            "text": "Operations correspond to operations you can perform on a Delphix Engine.  \nThe  available actions on a database are   delete - Delete a Delphix dSource or VDB.  disable - Disable a virtual dataset by name and group (optional).  enable - Enable a virtual dataset by name and group (optional).  ingest - Ingest source data to create a dsource.  list - List all datasets on an engine.  provision - Provision Delphix Virtual Databases and vFiles.  refresh - Refresh a Delphix VDB or vFile.  rewind - Rewind a VDB or vFile.  start - Starts a virtual dataset by name and group (optional).  stop - Stop a virtual dataset by name and group (optional).",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/database/index.html#support-for-additional-databases-and-operations-will-come-soon",
            "text": "",
            "title": "*Support for additional databases and operations will come soon."
        },
        {
            "location": "/References/CLI_References/database/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n  dxi database <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/database/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/database/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi database --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/database/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi database <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html",
            "text": "Snapshot\n\u00b6\n\n\nSnapshots represent points in time where a sync operation has occurred on either a dSource or VDB\n\n\ndxi provides commands to trigger some of the most commonly used snapshot related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'snapshot'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi snapshot <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available actions on an snapshot are\n\n\n\n\ncreate - Creates a snapshot on a dataset.\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n \ndxi snapshot <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi snapshot --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi snapshot <operation> --help",
            "title": "Snapshot"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#snapshot",
            "text": "Snapshots represent points in time where a sync operation has occurred on either a dSource or VDB  dxi provides commands to trigger some of the most commonly used snapshot related operations",
            "title": "Snapshot"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'snapshot'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi snapshot <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available actions on an snapshot are   create - Creates a snapshot on a dataset.",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n  dxi snapshot <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi snapshot --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/snapshot/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi snapshot <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/template/index.html",
            "text": "Template\n\u00b6\n\n\nA Template (Self Service Template) refers to a blueprint to create Self Service containers in Delphix.\n\n\ndxi provides commands to trigger some of the most commonly used template related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'template'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi template <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available operations on an template are\n\n\n\n\ncreate - Create a template\n\n\ndelete - Deletes a template\n\n\nlist - Lists all templates on an engine.\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n  \ndxi template <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi template --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi template <operation> --help",
            "title": "Template"
        },
        {
            "location": "/References/CLI_References/template/index.html#template",
            "text": "A Template (Self Service Template) refers to a blueprint to create Self Service containers in Delphix.  dxi provides commands to trigger some of the most commonly used template related operations",
            "title": "Template"
        },
        {
            "location": "/References/CLI_References/template/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'template'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi template <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/template/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available operations on an template are   create - Create a template  delete - Deletes a template  list - Lists all templates on an engine.",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/template/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n   dxi template <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/template/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/template/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi template --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/template/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi template <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/container/index.html",
            "text": "Container\n\u00b6\n\n\nA Container (Self Service Container) in Delphix refers to set of Virtual Datasets \nthat are grouped together and can be operated on as a single unit through Delphix Self Service\n\n\ndxi provides commands to trigger some of the most commonly used container related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'container'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi container <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available operations on an container are\n\n\n\n\ncreate - Create a container\n\n\nupdate - Update a container\n\n\ndelete - Deletes a container\n\n\nconnection-info -   Get connection info of a container\n\n\nrefresh - Refresh a container\n\n\nrestore - Restore a container\n\n\nreset - Reset a container  \n\n\nlist - Lists all templates on an engine.\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n \ndxi container <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi container --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi container <operation> --help",
            "title": "Container"
        },
        {
            "location": "/References/CLI_References/container/index.html#container",
            "text": "A Container (Self Service Container) in Delphix refers to set of Virtual Datasets \nthat are grouped together and can be operated on as a single unit through Delphix Self Service  dxi provides commands to trigger some of the most commonly used container related operations",
            "title": "Container"
        },
        {
            "location": "/References/CLI_References/container/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'container'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi container <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/container/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available operations on an container are   create - Create a container  update - Update a container  delete - Deletes a container  connection-info -   Get connection info of a container  refresh - Refresh a container  restore - Restore a container  reset - Reset a container    list - Lists all templates on an engine.",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/container/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n  dxi container <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/container/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/container/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi container --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/container/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi container <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html",
            "text": "Bookmark\n\u00b6\n\n\nBookmarks (Self Service Container Bookmark) are a way to mark and name a particular moment of \ndata on a timeline of a Self Service Container. \n\nYou can restore the active branch's timeline to the moment of data marked with a bookmark\n\n\ndxi provides commands to trigger some of the most commonly used bookmark related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'bookmark'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi bookmark <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available operations on an bookmark are\n\n\n\n\ncreate - Create a bookmark\n\n\nupdate - Update a bookmark\n\n\nshare - Update a bookmark\n\n\nunshare - Update a bookmark  \n\n\ndelete - Deletes a bookmark\n\n\nlist - Lists all bookmarkes on an engine.\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n  \ndxi bookmark <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi bookmark --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi bookmark <operation> --help",
            "title": "Bookmark"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#bookmark",
            "text": "Bookmarks (Self Service Container Bookmark) are a way to mark and name a particular moment of \ndata on a timeline of a Self Service Container.  \nYou can restore the active branch's timeline to the moment of data marked with a bookmark  dxi provides commands to trigger some of the most commonly used bookmark related operations",
            "title": "Bookmark"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'bookmark'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi bookmark <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available operations on an bookmark are   create - Create a bookmark  update - Update a bookmark  share - Update a bookmark  unshare - Update a bookmark    delete - Deletes a bookmark  list - Lists all bookmarkes on an engine.",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n   dxi bookmark <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi bookmark --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/bookmark/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi bookmark <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/branch/index.html",
            "text": "Branch\n\u00b6\n\n\nA branch (Self Service Container Branch) allows you create \nmultiple versions of your data within a container, just as you would do with code.\n\n\ndxi provides commands to trigger some of the most commonly used branch related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'branch'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi branch <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available operations on an branch are\n\n\n\n\ncreate - Create a branch\n\n\nactivate - Activate a branch\n\n\ndelete - Deletes a branch\n\n\nlist - Lists all branches on an engine.\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n \ndxi branch <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi branch --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi branch <operation> --help",
            "title": "Branch"
        },
        {
            "location": "/References/CLI_References/branch/index.html#branch",
            "text": "A branch (Self Service Container Branch) allows you create \nmultiple versions of your data within a container, just as you would do with code.  dxi provides commands to trigger some of the most commonly used branch related operations",
            "title": "Branch"
        },
        {
            "location": "/References/CLI_References/branch/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'branch'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi branch <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/branch/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available operations on an branch are   create - Create a branch  activate - Activate a branch  delete - Deletes a branch  list - Lists all branches on an engine.",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/branch/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n  dxi branch <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/branch/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/branch/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi branch --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/branch/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi branch <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/user/index.html",
            "text": "User\n\u00b6\n\n\nDelphix Virtualization Engine supports 3 different types of users \n- Admin User\n- Standrad Engine User\n_ Self-Service User\n\n\nRead more about Delphix Users \nhere\n\n\ndxi provides commands to trigger some of the most common User related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'user'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi user <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available operations on a user are\n\n\n\n\ncreate - Create a Delphix Virtualization Engine User\n\n\ndelete - Deletes a Delphix Virtualization Engine User\n\n\nlist - Lists all a Delphix Virtualization Engine Users\n\n\nupdate - Update a Delphix Virtualization Engine User\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n  \ndxi user <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi user --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi user <operation> --help",
            "title": "User"
        },
        {
            "location": "/References/CLI_References/user/index.html#user",
            "text": "Delphix Virtualization Engine supports 3 different types of users \n- Admin User\n- Standrad Engine User\n_ Self-Service User  Read more about Delphix Users  here  dxi provides commands to trigger some of the most common User related operations",
            "title": "User"
        },
        {
            "location": "/References/CLI_References/user/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'user'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi user <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/user/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available operations on a user are   create - Create a Delphix Virtualization Engine User  delete - Deletes a Delphix Virtualization Engine User  list - Lists all a Delphix Virtualization Engine Users  update - Update a Delphix Virtualization Engine User",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/user/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n   dxi user <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/user/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/user/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi user --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/user/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi user <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/CLI_References/group/index.html",
            "text": "Group\n\u00b6\n\n\nGroups in Delphix Virtualization Engine are used to group one or more datasets. \nYou can think of groups as folders to organize your dSources, VDBs and vFiles.\n\n\ndxi provides commands to trigger some of the most commonly used Group related operations\n\n\nUsage\n\u00b6\n\n\nEvery dxi cli command has 4 sections as shown below\n\n\n\n\ndxi : The main CLI\n\n\ncommand : Indicates the Delphix object you will be working on. In this case,'group'.\n\n\nOperation : The operation that you are performing on the Delphix object\n\n\nOptions: Required and Optional parameters for the operation\n\n\n\n\n   dxi group <operation> [options]\n\n\n\nOperations\n\u00b6\n\n\nOperations correspond to operations you can perform on the engine. \n\nThe available operations on a group are\n\n\n\n\ncreate - Create a group\n\n\ndelete - Deletes a group\n\n\nlist - Lists all groups on a Delphix Engine.\n\n\nupdate - Update a group.\n\n\n\n\nOptions\n\u00b6\n\n\nOptions are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.\n\n\n\n\nOptions\n\n\nDetailed information on options coming soon. To view all options for an operation, run the following.\n  \ndxi group <operation> --help\n\n\n\n\n\nAccess Help Information\n\u00b6\n\n\nAt every step, you can access the help information for a dxi command as follows\n\n\nAccess help info for the dxi environment command\n\u00b6\n\n\n   dxi group --help\n\n\n\nAccess help info for a specific dxi environment action\n\u00b6\n\n\n   dxi group <operation> --help",
            "title": "Group"
        },
        {
            "location": "/References/CLI_References/group/index.html#group",
            "text": "Groups in Delphix Virtualization Engine are used to group one or more datasets. \nYou can think of groups as folders to organize your dSources, VDBs and vFiles.  dxi provides commands to trigger some of the most commonly used Group related operations",
            "title": "Group"
        },
        {
            "location": "/References/CLI_References/group/index.html#usage",
            "text": "Every dxi cli command has 4 sections as shown below   dxi : The main CLI  command : Indicates the Delphix object you will be working on. In this case,'group'.  Operation : The operation that you are performing on the Delphix object  Options: Required and Optional parameters for the operation      dxi group <operation> [options]",
            "title": "Usage"
        },
        {
            "location": "/References/CLI_References/group/index.html#operations",
            "text": "Operations correspond to operations you can perform on the engine.  \nThe available operations on a group are   create - Create a group  delete - Deletes a group  list - Lists all groups on a Delphix Engine.  update - Update a group.",
            "title": "Operations"
        },
        {
            "location": "/References/CLI_References/group/index.html#options",
            "text": "Options are additional parameters that you can pass to a dxi command in order to modify the behavior of the operation.\nSome options are required, while others are not. The required options will be marked as [required] in the help information for an action.   Options  Detailed information on options coming soon. To view all options for an operation, run the following.\n   dxi group <operation> --help",
            "title": "Options"
        },
        {
            "location": "/References/CLI_References/group/index.html#access-help-information",
            "text": "At every step, you can access the help information for a dxi command as follows",
            "title": "Access Help Information"
        },
        {
            "location": "/References/CLI_References/group/index.html#access-help-info-for-the-dxi-environment-command",
            "text": "dxi group --help",
            "title": "Access help info for the dxi environment command"
        },
        {
            "location": "/References/CLI_References/group/index.html#access-help-info-for-a-specific-dxi-environment-action",
            "text": "dxi group <operation> --help",
            "title": "Access help info for a specific dxi environment action"
        },
        {
            "location": "/References/Library_References/environment/index.html",
            "text": "DXIEnvironment\n\u00b6\n\n\n\u200b\nAn Environment in Delphix is a Windows/ Linux / Unix Host that has been linked to Delphix. \nAn Environment may be a Source Host or Staging Host or Target Host.\n\u200b\nThis class provides methods for commonly used environment related operations.\n\u200b\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.environment.dxi_environment\n \nimport\n \nDXIEnvironment\n\n\nfrom\n \ndxi.environment.dxi_environment\n \nimport\n  \nEnvironmentConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXIEnvironment() \n\n\n\nConstructor\n\u00b6\n\n\n\u200b\nclass\n \nDXIEnvironment\n:\n\n        \n\"\"\"\n\n\n        Perform an environment operation\n\n\n        \"\"\"\n\n\n        \ndef\n \n__init__\n(\n\n            \nself\n,\n\n            \nengine\n=\nEnvironmentConstants\n.\nENGINE_ID\n,\n\n            \nlog_file_path\n=\nEnvironmentConstants\n.\nLOG_FILE_PATH\n,\n\n            \nconfig_file\n=\nEnvironmentConstants\n.\nCONFIG\n,\n\n            \npoll\n=\nEnvironmentConstants\n.\nPOLL\n,\n\n            \nsingle_thread\n=\nEnvironmentConstants\n.\nSINGLE_THREAD\n,\n\n            \nparallel\n=\nEnvironmentConstants\n.\nPARALLEL\n,\n\n            \naction\n=\nEnvironmentConstants\n.\nACTION\n,\n\n            \nmodule_name\n=\nEnvironmentConstants\n.\nMODULE_NAME\n,\n\n        \n)\n\n\n\n\nMethods\n\u00b6\n\n\nMethods correspond to operations you can perform on the engine. \n\n\u200b\n\n\nadd\n\u00b6\n\n\nTo add an environment on a engine.\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nadd\n(\nself\n,\n \nenv_name\n=\nNone\n,\n \nenv_type\n=\nNone\n,\n \nhost_ip\n=\nNone\n,\n \ntoolkit_dir\n=\nNone\n,\n \nos_user\n=\nNone\n,\n \nos_user_pwd\n=\nNone\n,\n \nconnector_env_name\n=\nNone\n,\n \nase_db_user\n=\nNone\n,\n \nase_db_user_pwd\n=\nNone\n,)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nName of the environment in Delphix\n\n\nNone\n\n\n\n\n\n\nenv_type\n\n\nstr\n\n\nType of the environment [ unix or windows ]\n\n\nNone\n\n\n\n\n\n\nhost_ip\n\n\nstr\n\n\nIP address or Hostname of the environment\n\n\nNone\n\n\n\n\n\n\ntoolkit_dir\n\n\nstr\n\n\nDirectory on the Unix/Linux environment to download Delphix Toolkit\n\n\nNone\n\n\n\n\n\n\nos_user\n\n\nstr\n\n\nDelphix OS user on the host environment\n\n\nNone\n\n\n\n\n\n\nos_user_pwd\n\n\nstr\n\n\nDelphix OS user password\n\n\nNone\n\n\n\n\n\n\nconnector_env_name\n\n\nstr\n\n\nName of the environment on which Windows connector is installed and running\n\n\nNone\n\n\n\n\n\n\nase_db_user\n\n\nstr\n\n\nASE DB username\n\n\nNone\n\n\n\n\n\n\nase_db_user_pwd\n\n\nstr\n\n\nASE DB user's password\n\n\nNone\n\n\n\n\n\n\n\u200b\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u200bdelete\n\u00b6\n\n\nDelete an environment by name.\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\nenv_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nName of the environment in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nenable\n\u00b6\n\n\nEnable an environment by name\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nenable\n(\nself\n,\nenv_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nName of the environment in Delphix\n\n\nNone\n\n\n\n\n\n\n\u200b\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndisable\n\u00b6\n\n\nDisable an environment by name\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \ndisable\n(\nself\n,\nenv_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nName of the environment in Delphix\n\n\nNone\n\n\n\n\n\n\n\u200b\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all environments on an engine\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n)\n\n\n\n\nrefresh\n\u00b6\n\n\nRefresh an environment by name\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nrefresh\n(\nself\n,\nenv_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nName of the environment in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nupdatehost\n\u00b6\n\n\nUpdate an environment's IP address\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nrefresh\n(\nself\n,\nold_host\n,\n \nnew_host\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nold_host\n\n\nstr\n\n\nOld IP Address of the environment to update\n\n\nNone\n\n\n\n\n\n\nnew_host\n\n\nstr\n\n\nNew IP or HostName of the environment\n\n\nNone",
            "title": "DXIEnvironment"
        },
        {
            "location": "/References/Library_References/environment/index.html#dxienvironment",
            "text": "\u200b\nAn Environment in Delphix is a Windows/ Linux / Unix Host that has been linked to Delphix. \nAn Environment may be a Source Host or Staging Host or Target Host.\n\u200b\nThis class provides methods for commonly used environment related operations.\n\u200b",
            "title": "DXIEnvironment"
        },
        {
            "location": "/References/Library_References/environment/index.html#how-to-import",
            "text": "from   dxi.environment.dxi_environment   import   DXIEnvironment  from   dxi.environment.dxi_environment   import    EnvironmentConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/environment/index.html#create-object",
            "text": "obj = DXIEnvironment()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/environment/index.html#constructor",
            "text": "\u200b class   DXIEnvironment : \n         \"\"\"          Perform an environment operation          \"\"\" \n\n         def   __init__ ( \n             self , \n             engine = EnvironmentConstants . ENGINE_ID , \n             log_file_path = EnvironmentConstants . LOG_FILE_PATH , \n             config_file = EnvironmentConstants . CONFIG , \n             poll = EnvironmentConstants . POLL , \n             single_thread = EnvironmentConstants . SINGLE_THREAD , \n             parallel = EnvironmentConstants . PARALLEL , \n             action = EnvironmentConstants . ACTION , \n             module_name = EnvironmentConstants . MODULE_NAME , \n         )",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/environment/index.html#methods",
            "text": "Methods correspond to operations you can perform on the engine.  \n\u200b",
            "title": "Methods"
        },
        {
            "location": "/References/Library_References/environment/index.html#add",
            "text": "To add an environment on a engine.\n\u200b",
            "title": "add"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature",
            "text": "def   add ( self ,   env_name = None ,   env_type = None ,   host_ip = None ,   toolkit_dir = None ,   os_user = None ,   os_user_pwd = None ,   connector_env_name = None ,   ase_db_user = None ,   ase_db_user_pwd = None ,)",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#arguments",
            "text": "Argument  Type  Description  Default      env_name  str  Name of the environment in Delphix  None    env_type  str  Type of the environment [ unix or windows ]  None    host_ip  str  IP address or Hostname of the environment  None    toolkit_dir  str  Directory on the Unix/Linux environment to download Delphix Toolkit  None    os_user  str  Delphix OS user on the host environment  None    os_user_pwd  str  Delphix OS user password  None    connector_env_name  str  Name of the environment on which Windows connector is installed and running  None    ase_db_user  str  ASE DB username  None    ase_db_user_pwd  str  ASE DB user's password  None    \u200b",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/environment/index.html#delete",
            "text": "Delete an environment by name.\n\u200b",
            "title": "\u200bdelete"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature_1",
            "text": "def   delete ( self , env_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      env_name  str  Name of the environment in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/environment/index.html#enable",
            "text": "Enable an environment by name\n\u200b",
            "title": "enable"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature_2",
            "text": "def   enable ( self , env_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      env_name  str  Name of the environment in Delphix  None    \u200b",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/environment/index.html#disable",
            "text": "Disable an environment by name\n\u200b",
            "title": "disable"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature_3",
            "text": "def   disable ( self , env_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#arguments_3",
            "text": "Argument  Type  Description  Default      env_name  str  Name of the environment in Delphix  None    \u200b",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/environment/index.html#list",
            "text": "List all environments on an engine\n\u200b",
            "title": "list"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature_4",
            "text": "def   list ( self )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#refresh",
            "text": "Refresh an environment by name\n\u200b",
            "title": "refresh"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature_5",
            "text": "def   refresh ( self , env_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#arguments_4",
            "text": "Argument  Type  Description  Default      env_name  str  Name of the environment in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/environment/index.html#updatehost",
            "text": "Update an environment's IP address\n\u200b",
            "title": "updatehost"
        },
        {
            "location": "/References/Library_References/environment/index.html#signature_6",
            "text": "def   refresh ( self , old_host ,   new_host )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/environment/index.html#arguments_5",
            "text": "Argument  Type  Description  Default      old_host  str  Old IP Address of the environment to update  None    new_host  str  New IP or HostName of the environment  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html",
            "text": "DXIDatabase\n\u00b6\n\n\n\u200b\nA Database refers to any dataset in Delphix.\n\nA Database can be a source (dsource), staging or virtual (vdb or vfiles).\nThis class provides methods to trigger some of the most commonly used VDB related operations.\n\u200b\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.database.dxi_database\n \nimport\n \nDXIDatabase\n\n\nfrom\n \ndxi.database.dxi_database\n \nimport\n \nDXIDatabaseConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXIDatabase() \n\n\n\nConstructor\n\u00b6\n\n\n\u200b\nclass\n \nDXIDatabase\n:\n\n    \n\"\"\"\n\n\n    Deletes a VDB or a list of VDBs from an engine\n\n\n    \"\"\"\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nname\n=\nDXIDatabaseConstants\n.\nNAME\n,\n\n        \ntype\n=\nDXIDatabaseConstants\n.\nTYPE\n,\n\n        \nforce\n=\nDXIDatabaseConstants\n.\nFORCE\n,\n\n        \nparallel\n=\nDXIDatabaseConstants\n.\nPARALLEL\n,\n\n        \nengine\n=\nDXIDatabaseConstants\n.\nENGINE_ID\n,\n\n        \npoll\n=\nDXIDatabaseConstants\n.\nPOLL\n,\n\n        \nconfig\n=\nDXIDatabaseConstants\n.\nCONFIG\n,\n\n        \nlog_file_path\n=\nDXIDatabaseConstants\n.\nLOG_FILE_PATH\n,\n\n        \nsingle_thread\n=\nDXIDatabaseConstants\n.\nSINGLE_THREAD\n,\n\n    \n):\n\n\n\n\nMethods\n\u00b6\n\n\nMethods correspond to operations you can perform on the engine.   \n\n\nMETHODS FOR PROVISIONING\n\u00b6\n\n\nThese methods are used to provision a virtual dataset in Delphix.\n\n\nprovision_oracle_si\n\u00b6\n\n\nCreate an Oracle Standalone VDB.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_oracle_si\n(\nself\n,\ngroup\n,\nsource_name\n,\ndb_name\n,\nenv_name\n,\nprerefresh\n=\nFalse\n,\npostrefresh\n=\nFalse\n,\nprerollback\n=\nFalse\n,\npostrollback\n=\nFalse\n,\nconfigure_clone\n=\nFalse\n,\nport_num\n=\n5432\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\nmntpoint\n=\n\"/mnt/ingest\"\n,\nenv_inst\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nprovision_oracle_rac\n\u00b6\n\n\nCreate an Oracle RAC VDB.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_oracle_rac\n(\nself\n,\n \ngroup\n,\n \nsource_name\n,\n \ndb_name\n,\n \nenv_name\n,\nnodes\n,\n \nprerefresh\n=\nFalse\n,\n \npostrefresh\n=\nFalse\n,\n \nprerollback\n=\nFalse\n,\n \npostrollback\n=\nFalse\n,\n \nconfigure_clone\n=\nFalse\n,\n \nport_num\n=\n5432\n,\n \ntimestamp_type\n=\n\"SNAPSHOT\"\n,\n \ntimestamp\n=\n\"LATEST\"\n,\n \nmntpoint\n=\n\"/mnt/ingest\"\n,\n \nenv_inst\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nprovision_oracle_mt\n\u00b6\n\n\nCreate an Oracle Multi-Tenant VDB.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_oracle_mt\n(\nself\n,\ngroup\n,\nsource_name\n,\ndb_name\n,\nenv_name\n,\nprerefresh\n=\nFalse\n,\npostrefresh\n=\nFalse\n,\nprerollback\n=\nFalse\n,\npostrollback\n=\nFalse\n,\nconfigure_clone\n=\nFalse\n,\nport_num\n=\n5432\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\nmntpoint\n=\n\"/mnt/ingest\"\n,\nenv_inst\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nprovision_mssql\n\u00b6\n\n\nCreate a MS SQLServer VDB.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_mssql\n(\nself\n,\ngroup\n,\nsource_name\n,\ndb_name\n,\nenv_name\n,\nprerefresh\n=\nFalse\n,\npostrefresh\n=\nFalse\n,\nprerollback\n=\nFalse\n,\npostrollback\n=\nFalse\n,\nconfigure_clone\n=\nFalse\n,\nport_num\n=\n5432\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\nmntpoint\n=\n\"/mnt/ingest\"\n,\nenv_inst\n=\nNone\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nprovision_ase\n\u00b6\n\n\nCreate a Sybase ASE VDB.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_ase\n(\nself\n,\ngroup\n,\nsource_name\n,\ndb_name\n,\nenv_name\n,\nprerefresh\n=\nFalse\n,\npostrefresh\n=\nFalse\n,\nprerollback\n=\nFalse\n,\npostrollback\n=\nFalse\n,\nconfigure_clone\n=\nFalse\n,\nport_num\n=\n5432\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\nmntpoint\n=\n\"/mnt/ingest\"\n,\nenv_inst\n=\nNone\n,\nno_truncate_log\n=\nFalse\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\nno_truncate_log\n\n\nstr\n\n\nSet the trunc log on chkpt database option\n\n\nNone\n\n\n\n\n\n\n\n\nprovision_vfiles\n\u00b6\n\n\nCreate a vfiles dataset.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_vfiles\n(\nself\n,\ngroup\n,\nsource_name\n,\ndb_name\n,\nenv_name\n,\nprerefresh\n=\nFalse\n,\npostrefresh\n=\nFalse\n,\nprerollback\n=\nFalse\n,\npostrollback\n=\nFalse\n,\nconfigure_clone\n=\nFalse\n,\nport_num\n=\n5432\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\nmntpoint\n=\n\"/mnt/ingest\"\n,\nenv_inst\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nprovision_postgres\n\u00b6\n\n\nCreate a Postgres VDB.\n\n\nSignature\n\u00b6\n\n\ndef\n \nprovision_postgres\n(\nself\n,\ngroup\n,\nsource_name\n,\ndb_name\n,\nenv_name\n,\nprerefresh\n=\nFalse\n,\npostrefresh\n=\nFalse\n,\nprerollback\n=\nFalse\n,\npostrollback\n=\nFalse\n,\nconfigure_clone\n=\nFalse\n,\nport_num\n=\n5432\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\nmntpoint\n=\n\"/mnt/ingest\"\n,\nenv_inst\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nThe group into which Delphix will place the VDB\n\n\nNone\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nThe source database\n\n\nNone\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nThe name you want to give the database\n\n\nNone\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nThe name of the Target environment in Delphix\n\n\nNone\n\n\n\n\n\n\nprerefresh\n\n\nstr\n\n\nPre-Hook commands before a refresh\n\n\nNone\n\n\n\n\n\n\npostrefresh\n\n\nstr\n\n\nPost-Hook commands after a refresh\n\n\nNone\n\n\n\n\n\n\nprerollback\n\n\nstr\n\n\nPre-Hook commands before a rollback\n\n\nNone\n\n\n\n\n\n\npostrollback\n\n\nstr\n\n\nPost-Hook commands after a rollback\n\n\nNone\n\n\n\n\n\n\nconfigure_clone\n\n\nstr\n\n\nConfigure Clone commands\n\n\nFalse\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nThe port number of the database instance\n\n\n5432\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\n'SNAPSHOT'\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe Delphix semantic for the point in time from which you want to ingest your VDB\n\n\n'LATEST'\n\n\n\n\n\n\nmntpoint\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\n/mnt/ingest\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nThe identifier of the instance in Delphix\n\n\nNone\n\n\n\n\n\n\n\n\nMETHODS FOR INGESTION\n\u00b6\n\n\nThese methods are used to ingest data into Delphix.\n\n\ningest_oracle\n\u00b6\n\n\nIngest a standalone or cluster Oracle database to create a dsource.\n\n\nSignature\n\u00b6\n\n\ndef\n \ningest_oracle\n(\nself\n,\nsource_name\n,\ndb_password\n,\ndb_user\n,\ngroup\n,\nenv_inst\n,\nlogsync\n=\nTrue\n,\nenv_name\n=\nNone\n,\nip_addr\n=\nNone\n,\nport_num\n=\nNone\n,\nrman_channels\n=\n2\n,\nfiles_per_set\n=\n5\n,\nnum_connections\n=\n5\n,)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nName of the dSource to create\n\n\nNone\n\n\n\n\n\n\ndb_password\n\n\nstr\n\n\nPassword for db_user\n\n\nNone\n\n\n\n\n\n\ndb_user\n\n\nstr\n\n\nUsername of the dSource DB\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup name for this dSource\n\n\nNone\n\n\n\n\n\n\nenv_inst\n\n\nstr\n\n\nLocation of the installation path of the DB\n\n\nNone\n\n\n\n\n\n\nlogsync\n\n\nstr\n\n\nEnable or disable logsync\n\n\nTrue\n\n\n\n\n\n\nenv_name\n\n\nstr\n\n\nName of the Delphix environment\n\n\nNone\n\n\n\n\n\n\nip_addr\n\n\nstr\n\n\nIP Address of the dSource\n\n\nNone\n\n\n\n\n\n\nport_num\n\n\nstr\n\n\nPort number for the Oracle Listener\n\n\nNone\n\n\n\n\n\n\nrman_channels\n\n\nstr\n\n\nConfigures the number of Oracle RMAN Channels\n\n\nNone\n\n\n\n\n\n\nfiles_per_set\n\n\nstr\n\n\nConfigures how many files per set for Oracle RMAN\n\n\nNone\n\n\n\n\n\n\nnum_connections\n\n\nstr\n\n\nNumber of connections for Oracle RMAN\n\n\nNone\n\n\n\n\n\n\n\n\ningest_mssql\n\u00b6\n\n\nIngest an MS SQLServer DB to create a dsource.\n\n\nSignature\n\u00b6\n\n\ndef\n \ningest_mssql\n(\nself\n,\n \nsource_name\n,\n \ndb_password\n,\n \ndb_user\n,\n \ngroup\n,\n \nsource_env\n,\n \nstage_env\n,\n \nstage_instance\n=\nNone\n,\n \nlogsync\n=\nTrue\n,\n \nvalidated_sync_mode\n=\n\"TRANSACTION_LOG\"\n,\n \ninitial_load_type\n=\nNone\n,\n \ndelphix_managed\n=\nTrue\n,\n \nbackup_path\n=\nNone\n,\nbackup_user_pwd\n=\nNone\n,\nbackup_user\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nName of the dSource to create\n\n\nNone\n\n\n\n\n\n\ndb_password\n\n\nstr\n\n\nPassword for db_user\n\n\nNone\n\n\n\n\n\n\ndb_user\n\n\nstr\n\n\nUsername of the dSource DB\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup name for this dSource\n\n\nNone\n\n\n\n\n\n\nsource_env\n\n\nstr\n\n\nName of the environment where the source DB resides.\n\n\nNone\n\n\n\n\n\n\nstage_env\n\n\nstr\n\n\nName of the staging environment.\n\n\nNone\n\n\n\n\n\n\nstage_instance\n\n\nstr\n\n\nName of the SQLServer instance on staging environment.\n\n\nNone\n\n\n\n\n\n\nlogsync\n\n\nstr\n\n\nEnable or disable logsync\n\n\nNone\n\n\n\n\n\n\nvalidated_sync_mode\n\n\nstr\n\n\nDelphix will try to load the most recent backup\n\n\nTrue\n\n\n\n\n\n\ninitial_load_type\n\n\nstr\n\n\nDelphix will try to load the most recent backup\n\n\nTRANSACTION_LOG\n\n\n\n\n\n\ndelphix_managed\n\n\nstr\n\n\nDelphix will try to load the most recent backup.\n\n\nTrue\n\n\n\n\n\n\nbackup_path\n\n\nstr\n\n\nPath to the ASE/MSSQL backups\n\n\nNone\n\n\n\n\n\n\nbackup_user_pwd\n\n\nstr\n\n\nPassword of the shared backup path\n\n\nNone\n\n\n\n\n\n\nbackup_user\n\n\nstr\n\n\nUser of the shared backup path\n\n\nNone\n\n\n\n\n\n\n\n\ningest_sybase\n\u00b6\n\n\nIngest an ASE DB to create a dsource.\n\n\nSignature\n\u00b6\n\n\ndef\n \ningest_sybase\n(\nself\n,\n \nsource_name\n,\n \ndb_user\n,\n \ndb_password\n,\n \ngroup\n,\n \nsource_env\n,\n \nstage_env\n,\n \nstage_instance\n,\n \nbackup_path\n,\n \nbackup_files\n=\nNone\n,\n \nlogsync\n=\nFalse\n,\n \ncreate_backup\n=\nNone\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nsource_name\n\n\nstr\n\n\nName of the dSource to create\n\n\nNone\n\n\n\n\n\n\ndb_password\n\n\nstr\n\n\nPassword for db_user\n\n\nNone\n\n\n\n\n\n\ndb_user\n\n\nstr\n\n\nUsername of the dSource DB\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup name for this dSource\n\n\nNone\n\n\n\n\n\n\nlogsync\n\n\nstr\n\n\nEnable or disable logsync\n\n\nNone\n\n\n\n\n\n\nsource_env\n\n\nstr\n\n\nName of the environment where the source DB resides.\n\n\nNone\n\n\n\n\n\n\nstage_env\n\n\nstr\n\n\nName of the staging environment.\n\n\nNone\n\n\n\n\n\n\nstage_instance\n\n\nstr\n\n\nStage repository\n\n\nNone\n\n\n\n\n\n\nbackup_path\n\n\nstr\n\n\nPath to the ASE/MSSQL backups\n\n\nNone\n\n\n\n\n\n\nbackup_files\n\n\nstr\n\n\nFully qualified name of backup file\n\n\nNone\n\n\n\n\n\n\ncreate_backup\n\n\nstr\n\n\nCreate and ingest a new Sybase backup\n\n\nNone\n\n\n\n\n\n\n\n\nOTHER DATABASE OPERATIONS\n\u00b6\n\n\ndelete\n\u00b6\n\n\nDeletes one or more datasets ( dsource, vdb, vfile)\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \ndb_name\n,\n \ndb_type\n=\n\"vdb\"\n,\n \nforce\n=\nFalse\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nName of dataset(s) in Delphix to execute against\n\n\nNone\n\n\n\n\n\n\ndb_type\n\n\nstr\n\n\nType of the dataset to delete. vdb\n\n\ndsource ]\n\n\n\n\n\n\nforce\n\n\nboolean\n\n\nForce delete the dataset\n\n\nFalse\n\n\n\n\n\n\n\n\nrefresh\n\u00b6\n\n\nRefresh a Delphix VDB or Vfile.\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nrefresh\n(\nself\n,\ndb_name\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\ntimeflow\n=\n\"None\"\n,)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nName of the virtual dataset to refresh\n\n\nNone\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe Delphix semantic for the point in time on the source  from which you want to refresh your VDB\n\n\nSNAPSHOT\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\nLATEST\n\n\n\n\n\n\ntimeflow\n\n\nstr\n\n\nName of the timeflow to refresh a VDB\n\n\nNone\n\n\n\n\n\n\n\n\nrewind\n\u00b6\n\n\nRewinds a Delphix VDB or Vfile.\n\u200b\n\n\nSignature\n\u00b6\n\n\ndef\n \nrewind\n(\nself\n,\ndb_name\n,\ntimestamp_type\n=\n\"SNAPSHOT\"\n,\ntimestamp\n=\n\"LATEST\"\n,\ndb_type\n=\nNone\n,):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nName of the virtual dataset to refresh\n\n\nNone\n\n\n\n\n\n\ntimestamp_type\n\n\nstr\n\n\nThe Delphix semantic for the point in time on the source  from which you want to refresh your VDB\n\n\nSNAPSHOT\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nThe type of timestamp you are specifying\n\n\nLATEST\n\n\n\n\n\n\ndb_type\n\n\nstr\n\n\nType of database: oracle, mssql, ase, vfiles\n\n\nNone\n\n\n\n\n\n\n\n\ndisable\n\u00b6\n\n\nDisable a Virtual dataset.\n\n\nSignature\n\u00b6\n\n\ndef\n \ndisable\n(\nself\n,\n \ndb_name\n,\n \ngroup\n=\nNone\n,\n \nforce\n=\nFalse\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nName of the virtual dataset to disable\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup where the dataset resides\n\n\nNone\n\n\n\n\n\n\nforce\n\n\nbool\n\n\nForce disable a virtual dataset\n\n\nFalse\n\n\n\n\n\n\n\n\nenable\n\u00b6\n\n\nDisable a Virtual dataset.\n\n\nSignature\n\u00b6\n\n\ndef\n \nenable\n(\nself\n,\n \ndb_name\n,\n \ngroup\n=\nNone\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nName of the virtual dataset to enable\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup where the dataset resides\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all datasets on an engine.\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n)\n\n\n\n\nstart\n\u00b6\n\n\nStart a Virtual dataset.\n\n\nSignature\n\u00b6\n\n\ndef\n \nstart\n(\nself\n,\n \ndb_name\n,\n \ngroup\n=\nNone\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndb_name\n\n\nstr\n\n\nName of the virtual dataset to start\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup where the dataset resides\n\n\nNone\n\n\n\n\n\n\n\n\nstop\n\u00b6\n\n\nStop a Virtual dataset.\n\n\nSignature\n\u00b6\n\n\ndef\n \nstop\n(\nself\n,\n \ndb_name\n,\n \ngroup\n=\nNone\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstr\n\n\nName of the virtual dataset to stop\n\n\nNone\n\n\n\n\n\n\ngroup\n\n\nstr\n\n\nGroup where the dataset resides\n\n\nNone",
            "title": "DXIDatabase"
        },
        {
            "location": "/References/Library_References/database/index.html#dxidatabase",
            "text": "\u200b\nA Database refers to any dataset in Delphix. \nA Database can be a source (dsource), staging or virtual (vdb or vfiles).\nThis class provides methods to trigger some of the most commonly used VDB related operations.\n\u200b",
            "title": "DXIDatabase"
        },
        {
            "location": "/References/Library_References/database/index.html#how-to-import",
            "text": "from   dxi.database.dxi_database   import   DXIDatabase  from   dxi.database.dxi_database   import   DXIDatabaseConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/database/index.html#create-object",
            "text": "obj = DXIDatabase()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/database/index.html#constructor",
            "text": "\u200b class   DXIDatabase : \n     \"\"\"      Deletes a VDB or a list of VDBs from an engine      \"\"\" \n     def   __init__ ( \n         self , \n         name = DXIDatabaseConstants . NAME , \n         type = DXIDatabaseConstants . TYPE , \n         force = DXIDatabaseConstants . FORCE , \n         parallel = DXIDatabaseConstants . PARALLEL , \n         engine = DXIDatabaseConstants . ENGINE_ID , \n         poll = DXIDatabaseConstants . POLL , \n         config = DXIDatabaseConstants . CONFIG , \n         log_file_path = DXIDatabaseConstants . LOG_FILE_PATH , \n         single_thread = DXIDatabaseConstants . SINGLE_THREAD , \n     ):",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/database/index.html#methods",
            "text": "Methods correspond to operations you can perform on the engine.",
            "title": "Methods"
        },
        {
            "location": "/References/Library_References/database/index.html#methods-for-provisioning",
            "text": "These methods are used to provision a virtual dataset in Delphix.",
            "title": "METHODS FOR PROVISIONING"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_oracle_si",
            "text": "Create an Oracle Standalone VDB.",
            "title": "provision_oracle_si"
        },
        {
            "location": "/References/Library_References/database/index.html#signature",
            "text": "def   provision_oracle_si ( self , group , source_name , db_name , env_name , prerefresh = False , postrefresh = False , prerollback = False , postrollback = False , configure_clone = False , port_num = 5432 , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , mntpoint = \"/mnt/ingest\" , env_inst = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_oracle_rac",
            "text": "Create an Oracle RAC VDB.",
            "title": "provision_oracle_rac"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_1",
            "text": "def   provision_oracle_rac ( self ,   group ,   source_name ,   db_name ,   env_name , nodes ,   prerefresh = False ,   postrefresh = False ,   prerollback = False ,   postrollback = False ,   configure_clone = False ,   port_num = 5432 ,   timestamp_type = \"SNAPSHOT\" ,   timestamp = \"LATEST\" ,   mntpoint = \"/mnt/ingest\" ,   env_inst = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_oracle_mt",
            "text": "Create an Oracle Multi-Tenant VDB.",
            "title": "provision_oracle_mt"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_2",
            "text": "def   provision_oracle_mt ( self , group , source_name , db_name , env_name , prerefresh = False , postrefresh = False , prerollback = False , postrollback = False , configure_clone = False , port_num = 5432 , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , mntpoint = \"/mnt/ingest\" , env_inst = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_mssql",
            "text": "Create a MS SQLServer VDB.",
            "title": "provision_mssql"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_3",
            "text": "def   provision_mssql ( self , group , source_name , db_name , env_name , prerefresh = False , postrefresh = False , prerollback = False , postrollback = False , configure_clone = False , port_num = 5432 , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , mntpoint = \"/mnt/ingest\" , env_inst = None ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_3",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_ase",
            "text": "Create a Sybase ASE VDB.",
            "title": "provision_ase"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_4",
            "text": "def   provision_ase ( self , group , source_name , db_name , env_name , prerefresh = False , postrefresh = False , prerollback = False , postrollback = False , configure_clone = False , port_num = 5432 , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , mntpoint = \"/mnt/ingest\" , env_inst = None , no_truncate_log = False ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_4",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None    no_truncate_log  str  Set the trunc log on chkpt database option  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_vfiles",
            "text": "Create a vfiles dataset.",
            "title": "provision_vfiles"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_5",
            "text": "def   provision_vfiles ( self , group , source_name , db_name , env_name , prerefresh = False , postrefresh = False , prerollback = False , postrollback = False , configure_clone = False , port_num = 5432 , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , mntpoint = \"/mnt/ingest\" , env_inst = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_5",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#provision_postgres",
            "text": "Create a Postgres VDB.",
            "title": "provision_postgres"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_6",
            "text": "def   provision_postgres ( self , group , source_name , db_name , env_name , prerefresh = False , postrefresh = False , prerollback = False , postrollback = False , configure_clone = False , port_num = 5432 , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , mntpoint = \"/mnt/ingest\" , env_inst = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_6",
            "text": "Argument  Type  Description  Default      group  str  The group into which Delphix will place the VDB  None    source_name  str  The source database  None    db_name  str  The name you want to give the database  None    env_name  str  The name of the Target environment in Delphix  None    prerefresh  str  Pre-Hook commands before a refresh  None    postrefresh  str  Post-Hook commands after a refresh  None    prerollback  str  Pre-Hook commands before a rollback  None    postrollback  str  Post-Hook commands after a rollback  None    configure_clone  str  Configure Clone commands  False    port_num  str  The port number of the database instance  5432    timestamp_type  str  The type of timestamp you are specifying  'SNAPSHOT'    timestamp  str  The Delphix semantic for the point in time from which you want to ingest your VDB  'LATEST'    mntpoint  str  The identifier of the instance in Delphix  /mnt/ingest    env_inst  str  The identifier of the instance in Delphix  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#methods-for-ingestion",
            "text": "These methods are used to ingest data into Delphix.",
            "title": "METHODS FOR INGESTION"
        },
        {
            "location": "/References/Library_References/database/index.html#ingest_oracle",
            "text": "Ingest a standalone or cluster Oracle database to create a dsource.",
            "title": "ingest_oracle"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_7",
            "text": "def   ingest_oracle ( self , source_name , db_password , db_user , group , env_inst , logsync = True , env_name = None , ip_addr = None , port_num = None , rman_channels = 2 , files_per_set = 5 , num_connections = 5 ,)",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_7",
            "text": "Argument  Type  Description  Default      source_name  str  Name of the dSource to create  None    db_password  str  Password for db_user  None    db_user  str  Username of the dSource DB  None    group  str  Group name for this dSource  None    env_inst  str  Location of the installation path of the DB  None    logsync  str  Enable or disable logsync  True    env_name  str  Name of the Delphix environment  None    ip_addr  str  IP Address of the dSource  None    port_num  str  Port number for the Oracle Listener  None    rman_channels  str  Configures the number of Oracle RMAN Channels  None    files_per_set  str  Configures how many files per set for Oracle RMAN  None    num_connections  str  Number of connections for Oracle RMAN  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#ingest_mssql",
            "text": "Ingest an MS SQLServer DB to create a dsource.",
            "title": "ingest_mssql"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_8",
            "text": "def   ingest_mssql ( self ,   source_name ,   db_password ,   db_user ,   group ,   source_env ,   stage_env ,   stage_instance = None ,   logsync = True ,   validated_sync_mode = \"TRANSACTION_LOG\" ,   initial_load_type = None ,   delphix_managed = True ,   backup_path = None , backup_user_pwd = None , backup_user = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_8",
            "text": "Argument  Type  Description  Default      source_name  str  Name of the dSource to create  None    db_password  str  Password for db_user  None    db_user  str  Username of the dSource DB  None    group  str  Group name for this dSource  None    source_env  str  Name of the environment where the source DB resides.  None    stage_env  str  Name of the staging environment.  None    stage_instance  str  Name of the SQLServer instance on staging environment.  None    logsync  str  Enable or disable logsync  None    validated_sync_mode  str  Delphix will try to load the most recent backup  True    initial_load_type  str  Delphix will try to load the most recent backup  TRANSACTION_LOG    delphix_managed  str  Delphix will try to load the most recent backup.  True    backup_path  str  Path to the ASE/MSSQL backups  None    backup_user_pwd  str  Password of the shared backup path  None    backup_user  str  User of the shared backup path  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#ingest_sybase",
            "text": "Ingest an ASE DB to create a dsource.",
            "title": "ingest_sybase"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_9",
            "text": "def   ingest_sybase ( self ,   source_name ,   db_user ,   db_password ,   group ,   source_env ,   stage_env ,   stage_instance ,   backup_path ,   backup_files = None ,   logsync = False ,   create_backup = None )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_9",
            "text": "Argument  Type  Description  Default      source_name  str  Name of the dSource to create  None    db_password  str  Password for db_user  None    db_user  str  Username of the dSource DB  None    group  str  Group name for this dSource  None    logsync  str  Enable or disable logsync  None    source_env  str  Name of the environment where the source DB resides.  None    stage_env  str  Name of the staging environment.  None    stage_instance  str  Stage repository  None    backup_path  str  Path to the ASE/MSSQL backups  None    backup_files  str  Fully qualified name of backup file  None    create_backup  str  Create and ingest a new Sybase backup  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#other-database-operations",
            "text": "",
            "title": "OTHER DATABASE OPERATIONS"
        },
        {
            "location": "/References/Library_References/database/index.html#delete",
            "text": "Deletes one or more datasets ( dsource, vdb, vfile)\n\u200b",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_10",
            "text": "def   delete ( self ,   db_name ,   db_type = \"vdb\" ,   force = False )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_10",
            "text": "Argument  Type  Description  Default      db_name  str  Name of dataset(s) in Delphix to execute against  None    db_type  str  Type of the dataset to delete. vdb  dsource ]    force  boolean  Force delete the dataset  False",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#refresh",
            "text": "Refresh a Delphix VDB or Vfile.\n\u200b",
            "title": "refresh"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_11",
            "text": "def   refresh ( self , db_name , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , timeflow = \"None\" ,)",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_11",
            "text": "Argument  Type  Description  Default      db_name  str  Name of the virtual dataset to refresh  None    timestamp_type  str  The Delphix semantic for the point in time on the source  from which you want to refresh your VDB  SNAPSHOT    timestamp  str  The type of timestamp you are specifying  LATEST    timeflow  str  Name of the timeflow to refresh a VDB  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#rewind",
            "text": "Rewinds a Delphix VDB or Vfile.\n\u200b",
            "title": "rewind"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_12",
            "text": "def   rewind ( self , db_name , timestamp_type = \"SNAPSHOT\" , timestamp = \"LATEST\" , db_type = None ,):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_12",
            "text": "Argument  Type  Description  Default      db_name  str  Name of the virtual dataset to refresh  None    timestamp_type  str  The Delphix semantic for the point in time on the source  from which you want to refresh your VDB  SNAPSHOT    timestamp  str  The type of timestamp you are specifying  LATEST    db_type  str  Type of database: oracle, mssql, ase, vfiles  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#disable",
            "text": "Disable a Virtual dataset.",
            "title": "disable"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_13",
            "text": "def   disable ( self ,   db_name ,   group = None ,   force = False )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_13",
            "text": "Argument  Type  Description  Default      db_name  str  Name of the virtual dataset to disable  None    group  str  Group where the dataset resides  None    force  bool  Force disable a virtual dataset  False",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#enable",
            "text": "Disable a Virtual dataset.",
            "title": "enable"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_14",
            "text": "def   enable ( self ,   db_name ,   group = None )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_14",
            "text": "Argument  Type  Description  Default      db_name  str  Name of the virtual dataset to enable  None    group  str  Group where the dataset resides  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#list",
            "text": "List all datasets on an engine.",
            "title": "list"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_15",
            "text": "def   list ( self )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#start",
            "text": "Start a Virtual dataset.",
            "title": "start"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_16",
            "text": "def   start ( self ,   db_name ,   group = None )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_15",
            "text": "Argument  Type  Description  Default      db_name  str  Name of the virtual dataset to start  None    group  str  Group where the dataset resides  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/database/index.html#stop",
            "text": "Stop a Virtual dataset.",
            "title": "stop"
        },
        {
            "location": "/References/Library_References/database/index.html#signature_17",
            "text": "def   stop ( self ,   db_name ,   group = None )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/database/index.html#arguments_16",
            "text": "Argument  Type  Description  Default      name  str  Name of the virtual dataset to stop  None    group  str  Group where the dataset resides  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/snapshot/index.html",
            "text": "DXISnapshot\n\u00b6\n\n\nSnapshots represent points in time where a sync operation has occurred on either a dSource or VDB.\nThis class provides methods for commonly used snapshot related operations.\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.snapshot.dxi_snapshot\n \nimport\n \nDXISnapshot\n\n\nfrom\n \ndxi.snapshot.dxi_snapshot\n \nimport\n \nSnapshotConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXISnapshot() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXISnapshot\n:\n\n    \n\"\"\"\n\n\n    Create a snapshot a dSource or VDB\n\n\n    \"\"\"\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nname\n=\nSnapshotConstants\n.\nNAME\n,\n\n        \ngroup\n=\nSnapshotConstants\n.\nGROUP\n,\n\n        \nparallel\n=\nSnapshotConstants\n.\nPARALLEL\n,\n\n        \nengine\n=\nSnapshotConstants\n.\nENGINE_ID\n,\n\n        \npoll\n=\nSnapshotConstants\n.\nPOLL\n,\n\n        \nconfig\n=\nSnapshotConstants\n.\nCONFIG\n,\n\n        \nlog_file_path\n=\nSnapshotConstants\n.\nLOG_FILE_PATH\n,\n\n        \nall_dbs\n=\nSnapshotConstants\n.\nALL_DBS\n,\n\n        \nsingle_thread\n=\nSnapshotConstants\n.\nSINGLE_THREAD\n,\n\n    \n)\n\n\n\n\nMethods\n\u00b6\n\n\nMethods correspond to operations you can perform on the snapshot of dSource or VDB.   \n\n\ncreate_snapshot\n\u00b6\n\n\nTo take a snapshot of a dsource, vdb or vfile.\n\n\nSignature\n\u00b6\n\n\ndef\n \ncreate\n(\nself\n,\n \nuse_recent_backup\n=\nFalse\n,\n \ncreate_backup\n=\nFalse\n,\n \nbackup_file\n=\nNone\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuse_recent_backup\n\n\nbool\n\n\nSnapshot using \"Most Recent backup\"\n\n\nFalse\n\n\n\n\n\n\ncreate_backup\n\n\nbool\n\n\nCreate and ingest a new Sybase backup or copy-only MS SQL backup\n\n\nFalse\n\n\n\n\n\n\nbackup_file\n\n\nstr\n\n\nName of the specific ASE Sybase backup file(s)\n\n\nNone",
            "title": "DXISnapshot"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#dxisnapshot",
            "text": "Snapshots represent points in time where a sync operation has occurred on either a dSource or VDB.\nThis class provides methods for commonly used snapshot related operations.",
            "title": "DXISnapshot"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#how-to-import",
            "text": "from   dxi.snapshot.dxi_snapshot   import   DXISnapshot  from   dxi.snapshot.dxi_snapshot   import   SnapshotConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#create-object",
            "text": "obj = DXISnapshot()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#constructor",
            "text": "class   DXISnapshot : \n     \"\"\"      Create a snapshot a dSource or VDB      \"\"\" \n     def   __init__ ( \n         self , \n         name = SnapshotConstants . NAME , \n         group = SnapshotConstants . GROUP , \n         parallel = SnapshotConstants . PARALLEL , \n         engine = SnapshotConstants . ENGINE_ID , \n         poll = SnapshotConstants . POLL , \n         config = SnapshotConstants . CONFIG , \n         log_file_path = SnapshotConstants . LOG_FILE_PATH , \n         all_dbs = SnapshotConstants . ALL_DBS , \n         single_thread = SnapshotConstants . SINGLE_THREAD , \n     )",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#methods",
            "text": "Methods correspond to operations you can perform on the snapshot of dSource or VDB.",
            "title": "Methods"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#create_snapshot",
            "text": "To take a snapshot of a dsource, vdb or vfile.",
            "title": "create_snapshot"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#signature",
            "text": "def   create ( self ,   use_recent_backup = False ,   create_backup = False ,   backup_file = None ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/snapshot/index.html#arguments",
            "text": "Argument  Type  Description  Default      use_recent_backup  bool  Snapshot using \"Most Recent backup\"  False    create_backup  bool  Create and ingest a new Sybase backup or copy-only MS SQL backup  False    backup_file  str  Name of the specific ASE Sybase backup file(s)  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/template/index.html",
            "text": "DXITemplate\n\u00b6\n\n\nA Template (Self Service Template) refers to a blueprint to create Self Service containers in Delphix.\nIt provides methods for all Self Service Template related operations.\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.template.dxi_template\n \nimport\n \nDXITemplate\n\n\nfrom\n \ndxi.template.dxi_template\n \nimport\n \nDXITemplateConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXITemplate() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXITemplate\n:\n\n    \n\"\"\"\n\n\n    Class for Self Service Template Operations\n\n\n    \"\"\"\n\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nengine\n=\nDXITemplateConstants\n.\nENGINE_ID\n,\n\n        \nsingle_thread\n=\nDXITemplateConstants\n.\nSINGLE_THREAD\n,\n\n        \nconfig\n=\nDXITemplateConstants\n.\nCONFIG\n,\n\n        \nlog_file_path\n=\nDXITemplateConstants\n.\nLOG_FILE_PATH\n,\n\n        \npoll\n=\nDXITemplateConstants\n.\nPOLL\n,\n\n        \naction\n=\nDXITemplateConstants\n.\nACTION\n,\n\n    \n):\n\n\n\n\nMethods\n\u00b6\n\n\nMethod for all Self Service Template related operations.  \n\n\ncreate\n\u00b6\n\n\nCreate a template on an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \ncreate\n(\nself\n,\n \ntemplate_name\n,\n \ndbnames\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the template to create\n\n\nNone\n\n\n\n\n\n\ndbnames\n\n\nstr\n\n\nList of datasource names, separated by \":' (Sample oraclesrc1:sqlsrc1 )\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all templates on an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n)\n\n\n\n\ndelete\n\u00b6\n\n\nDelete a template from an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \ntemplate_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the template to delete\n\n\nNone",
            "title": "DXITemplate"
        },
        {
            "location": "/References/Library_References/template/index.html#dxitemplate",
            "text": "A Template (Self Service Template) refers to a blueprint to create Self Service containers in Delphix.\nIt provides methods for all Self Service Template related operations.",
            "title": "DXITemplate"
        },
        {
            "location": "/References/Library_References/template/index.html#how-to-import",
            "text": "from   dxi.template.dxi_template   import   DXITemplate  from   dxi.template.dxi_template   import   DXITemplateConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/template/index.html#create-object",
            "text": "obj = DXITemplate()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/template/index.html#constructor",
            "text": "class   DXITemplate : \n     \"\"\"      Class for Self Service Template Operations      \"\"\" \n\n     def   __init__ ( \n         self , \n         engine = DXITemplateConstants . ENGINE_ID , \n         single_thread = DXITemplateConstants . SINGLE_THREAD , \n         config = DXITemplateConstants . CONFIG , \n         log_file_path = DXITemplateConstants . LOG_FILE_PATH , \n         poll = DXITemplateConstants . POLL , \n         action = DXITemplateConstants . ACTION , \n     ):",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/template/index.html#methods",
            "text": "Method for all Self Service Template related operations.",
            "title": "Methods"
        },
        {
            "location": "/References/Library_References/template/index.html#create",
            "text": "Create a template on an engine",
            "title": "create"
        },
        {
            "location": "/References/Library_References/template/index.html#signature",
            "text": "def   create ( self ,   template_name ,   dbnames )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/template/index.html#arguments",
            "text": "Argument  Type  Description  Default      template_name  str  Name of the template to create  None    dbnames  str  List of datasource names, separated by \":' (Sample oraclesrc1:sqlsrc1 )  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/template/index.html#list",
            "text": "List all templates on an engine",
            "title": "list"
        },
        {
            "location": "/References/Library_References/template/index.html#signature_1",
            "text": "def   list ( self )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/template/index.html#delete",
            "text": "Delete a template from an engine",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/template/index.html#signature_2",
            "text": "def   delete ( self ,   template_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/template/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      template_name  str  Name of the template to delete  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html",
            "text": "DXIContainer\n\u00b6\n\n\nA Container (Self Service Container) in Delphix refers to set of Virtual Datasets.\nthat are grouped together and can be operated on as a single unit through Delphix Self Service.\n\n\nThis class provides methods to trigger some of the most commonly used container related operations.\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.container.dxi_container\n \nimport\n \nDXIContainer\n\n\nfrom\n \ndxi.container.dxi_container\n \nimport\n \nDXIContainerConstants\n\n\n\n\nCreate Object\n\u00b6\n\n\n   obj = DXIContainer() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXIContainer\n:\n\n    \n\"\"\"\n\n\n    Create a snapshot a dSource or VDB\n\n\n    \"\"\"\n\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nengine\n=\nDXIContainerConstants\n.\nENGINE_ID\n,\n\n        \nsingle_thread\n=\nDXIContainerConstants\n.\nSINGLE_THREAD\n,\n\n        \nconfig\n=\nDXIContainerConstants\n.\nCONFIG\n,\n\n        \nlog_file_path\n=\nDXIContainerConstants\n.\nLOG_FILE_PATH\n,\n\n        \npoll\n=\nDXIContainerConstants\n.\nPOLL\n,\n\n    \n):\n\n\n\n\ncreate\n\u00b6\n\n\nCreate the SS container\n\n\nSignature\n\u00b6\n\n\ndef\n \ncreate\n(\nself\n,\n \ncontainer_name\n,\n \ntemplate_name\n,\n \ndatabase_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the JS Template to use for the container\n\n\nNone\n\n\n\n\n\n\ndatabase_name\n\n\nstr\n\n\nName of the child database(s) to use for the SS Container\n\n\nNone\n\n\n\n\n\n\n\n\ndelete\n\u00b6\n\n\nDelete the SS container\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \ncontainer_name\n,\n \nkeep_vdbs\n=\nFalse\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\nkeep_vdbs\n\n\nbool\n\n\nIf set, deleting the container will not remove the underlying VDB\n\n\nFalse\n\n\n\n\n\n\n\n\nrefresh\n\u00b6\n\n\nRefreshes a container\n\n\nSignature\n\u00b6\n\n\ndef\n \nrefresh\n(\nself\n,\n \ncontainer_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\n\n\nreset\n\u00b6\n\n\nReset a container\n\n\nSignature\n\u00b6\n\n\ndef\n \nreset\n(\nself\n,\n \ncontainer_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nGive all containers on a given engine\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n)\n\n\n\n\nconnection_info\n\u00b6\n\n\nList all database connection info\n\n\nSignature\n\u00b6\n\n\ndef\n \nconnection_info\n(\nself\n,\n \ncontainer_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\n\n\nadd_owner\n\u00b6\n\n\nAdds an owner to a container\n\n\nSignature\n\u00b6\n\n\ndef\n \nadd_owner\n(\nself\n,\n \ncontainer_name\n,\n \ntemplate_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the JS Template to use for the container\n\n\nNone\n\n\n\n\n\n\n\n\nremove_owner\n\u00b6\n\n\nRemoves an owner to a container\n\n\nSignature\n\u00b6\n\n\ndef\n \nremove_owner\n(\nself\n,\n \ncontainer_name\n,\n \ntemplate_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the JS Template to use for the container\n\n\nNone",
            "title": "DXIContainer"
        },
        {
            "location": "/References/Library_References/container/index.html#dxicontainer",
            "text": "A Container (Self Service Container) in Delphix refers to set of Virtual Datasets.\nthat are grouped together and can be operated on as a single unit through Delphix Self Service.  This class provides methods to trigger some of the most commonly used container related operations.",
            "title": "DXIContainer"
        },
        {
            "location": "/References/Library_References/container/index.html#how-to-import",
            "text": "from   dxi.container.dxi_container   import   DXIContainer  from   dxi.container.dxi_container   import   DXIContainerConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/container/index.html#create-object",
            "text": "obj = DXIContainer()",
            "title": "Create Object"
        },
        {
            "location": "/References/Library_References/container/index.html#constructor",
            "text": "class   DXIContainer : \n     \"\"\"      Create a snapshot a dSource or VDB      \"\"\" \n\n     def   __init__ ( \n         self , \n         engine = DXIContainerConstants . ENGINE_ID , \n         single_thread = DXIContainerConstants . SINGLE_THREAD , \n         config = DXIContainerConstants . CONFIG , \n         log_file_path = DXIContainerConstants . LOG_FILE_PATH , \n         poll = DXIContainerConstants . POLL , \n     ):",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/container/index.html#create",
            "text": "Create the SS container",
            "title": "create"
        },
        {
            "location": "/References/Library_References/container/index.html#signature",
            "text": "def   create ( self ,   container_name ,   template_name ,   database_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None    template_name  str  Name of the JS Template to use for the container  None    database_name  str  Name of the child database(s) to use for the SS Container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html#delete",
            "text": "Delete the SS container",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_1",
            "text": "def   delete ( self ,   container_name ,   keep_vdbs = False )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None    keep_vdbs  bool  If set, deleting the container will not remove the underlying VDB  False",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html#refresh",
            "text": "Refreshes a container",
            "title": "refresh"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_2",
            "text": "def   refresh ( self ,   container_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html#reset",
            "text": "Reset a container",
            "title": "reset"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_3",
            "text": "def   reset ( self ,   container_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments_3",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html#list",
            "text": "Give all containers on a given engine",
            "title": "list"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_4",
            "text": "def   list ( self )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#connection_info",
            "text": "List all database connection info",
            "title": "connection_info"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_5",
            "text": "def   connection_info ( self ,   container_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments_4",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html#add_owner",
            "text": "Adds an owner to a container",
            "title": "add_owner"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_6",
            "text": "def   add_owner ( self ,   container_name ,   template_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments_5",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None    template_name  str  Name of the JS Template to use for the container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/container/index.html#remove_owner",
            "text": "Removes an owner to a container",
            "title": "remove_owner"
        },
        {
            "location": "/References/Library_References/container/index.html#signature_7",
            "text": "def   remove_owner ( self ,   container_name ,   template_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/container/index.html#arguments_6",
            "text": "Argument  Type  Description  Default      container_name  str  Name of the SS Container  None    template_name  str  Name of the JS Template to use for the container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/bookmark/index.html",
            "text": "DXIBookmark\n\u00b6\n\n\nBookmarks (Self Service Container Bookmark) are a way to mark and name a particular moment of \ndata on a timeline of a Self Service Container. \n\nYou can restore the active branch's timeline to the moment of data marked with a bookmark.\nThis class provides methods to trigger some of the most commonly used bookmark related operations.\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.bookmark.dxi_bookmark\n \nimport\n \nDXIBookmark\n\n\nfrom\n \ndxi.bookmark.dxi_bookmark\n \nimport\n \nBookmarkConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXIBookmark() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXIBookmark\n:\n\n    \n\"\"\"\n\n\n    Delphix Integration class for Bookmark Operations\n\n\n\n    This class contains all methods to perform Delphix \\\n\n\n    Self Service Bookmark Operations\n\n\n    \"\"\"\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nengine\n=\nBookmarkConstants\n.\nENGINE_ID\n,\n\n        \nlog_file_path\n=\nBookmarkConstants\n.\nLOG_FILE_PATH\n,\n\n        \nconfig_file\n=\nBookmarkConstants\n.\nCONFIG\n,\n\n        \npoll\n=\nBookmarkConstants\n.\nPOLL\n,\n\n        \nsingle_thread\n=\nBookmarkConstants\n.\nSINGLE_THREAD\n,\n\n        \nparallel\n=\nBookmarkConstants\n.\nPARALLEL\n,\n\n        \naction\n=\nBookmarkConstants\n.\nACTION\n,\n\n        \nmodule_name\n=\nBookmarkConstants\n.\nMODULE_NAME\n,\n\n    \n):\n\n\n\n\ncreate\n\u00b6\n\n\nCreate a new bookmark\n\n\nSignature\n\u00b6\n\n\ndef\n \ncreate\n(\nself\n,\nbookmark_name\n,\n \ncontainer_name\n,\n \ntemplate_name\n,\n \nbranch_name\n=\nNone\n,\n \ntimestamp\n=\nNone\n,\n \nexpires\n=\nNone\n,\n \ntags\n=\nNone\n,\n \ndescription\n=\nNone\n,)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbookmark_name\n\n\nstr\n\n\nName of the bookmark to create\n\n\nNone\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the container to create the bookmark\n\n\nNone\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the template to create the bookmark\n\n\nNone\n\n\n\n\n\n\nbranch_name\n\n\nstr\n\n\nIf bookmark is not unique in a container\n\n\nNone\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nTimestamp to create the bookmark.\n\n\nNone\n\n\n\n\n\n\nexpires\n\n\nstr\n\n\nSet bookmark expiration time. Format \"%Y-%m-%dT%H:%M:%S\"\n\n\nNone\n\n\n\n\n\n\ntags\n\n\nstr\n\n\nTags to set on the bookmark\n\n\nNone\n\n\n\n\n\n\ndescription\n\n\nstr\n\n\nDescription for the bookmark\n\n\nNone\n\n\n\n\n\n\n\n\ndelete\n\u00b6\n\n\nDelete a bookmark using bookmark name\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \nbookmark_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbookmark_name\n\n\nstr\n\n\nName of the bookmark to delete\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all Bookmarks on an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n,\n \ntags\n=\nNone\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntags\n\n\nstr\n\n\nTags to filter the bookmark names\n\n\nNone\n\n\n\n\n\n\n\n\nshare\n\u00b6\n\n\nShare a bookmark by name\n\n\nSignature\n\u00b6\n\n\ndef\n \nshare\n(\nself\n,\n \nbookmark_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbookmark_name\n\n\nstr\n\n\nName of the bookmark to delete\n\n\nNone\n\n\n\n\n\n\n\n\nunshare\n\u00b6\n\n\nUnShare a bookmark by name\n\n\nSignature\n\u00b6\n\n\ndef\n \nunshare\n(\nself\n,\n \nbookmark_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbookmark_name\n\n\nstr\n\n\nName of the bookmark to delete\n\n\nNone\n\n\n\n\n\n\n\n\nupdate\n\u00b6\n\n\nUpdates a bookmark using a bookmark name\n\n\nSignature\n\u00b6\n\n\ndef\n \nupdate\n(\nself\n,\nbookmark_name\n,\ntags\n=\nNone\n,\nexpires\n=\nNone\n,\nnew_bookmark_name\n=\nNone\n,\ndescription\n=\nNone\n,)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbookmark_name\n\n\nstr\n\n\nName of the bookmark to update\n\n\nNone\n\n\n\n\n\n\ntags\n\n\nstr\n\n\nIf updating tags, provide new tags. All existing tags on the bookmark will be replaced with new tags\n\n\nNone\n\n\n\n\n\n\nexpires\n\n\nstr\n\n\nIf updating expiration, provide new expiration date-time 'Format: \"%Y-%m-%dT%H:%M:%S\n\n\nNone\n\n\n\n\n\n\nnew_bookmark_name\n\n\nstr\n\n\nIf updating bookmark name, provide new name\n\n\nNone\n\n\n\n\n\n\ndescription\n\n\nstr\n\n\nIf updating description, provide new description.\n\n\nNone",
            "title": "DXIBookmark"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#dxibookmark",
            "text": "Bookmarks (Self Service Container Bookmark) are a way to mark and name a particular moment of \ndata on a timeline of a Self Service Container.  \nYou can restore the active branch's timeline to the moment of data marked with a bookmark.\nThis class provides methods to trigger some of the most commonly used bookmark related operations.",
            "title": "DXIBookmark"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#how-to-import",
            "text": "from   dxi.bookmark.dxi_bookmark   import   DXIBookmark  from   dxi.bookmark.dxi_bookmark   import   BookmarkConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#create-object",
            "text": "obj = DXIBookmark()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#constructor",
            "text": "class   DXIBookmark : \n     \"\"\"      Delphix Integration class for Bookmark Operations      This class contains all methods to perform Delphix \\      Self Service Bookmark Operations      \"\"\" \n     def   __init__ ( \n         self , \n         engine = BookmarkConstants . ENGINE_ID , \n         log_file_path = BookmarkConstants . LOG_FILE_PATH , \n         config_file = BookmarkConstants . CONFIG , \n         poll = BookmarkConstants . POLL , \n         single_thread = BookmarkConstants . SINGLE_THREAD , \n         parallel = BookmarkConstants . PARALLEL , \n         action = BookmarkConstants . ACTION , \n         module_name = BookmarkConstants . MODULE_NAME , \n     ):",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#create",
            "text": "Create a new bookmark",
            "title": "create"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#signature",
            "text": "def   create ( self , bookmark_name ,   container_name ,   template_name ,   branch_name = None ,   timestamp = None ,   expires = None ,   tags = None ,   description = None ,)",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#arguments",
            "text": "Argument  Type  Description  Default      bookmark_name  str  Name of the bookmark to create  None    container_name  str  Name of the container to create the bookmark  None    template_name  str  Name of the template to create the bookmark  None    branch_name  str  If bookmark is not unique in a container  None    timestamp  str  Timestamp to create the bookmark.  None    expires  str  Set bookmark expiration time. Format \"%Y-%m-%dT%H:%M:%S\"  None    tags  str  Tags to set on the bookmark  None    description  str  Description for the bookmark  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#delete",
            "text": "Delete a bookmark using bookmark name",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#signature_1",
            "text": "def   delete ( self ,   bookmark_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      bookmark_name  str  Name of the bookmark to delete  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#list",
            "text": "List all Bookmarks on an engine",
            "title": "list"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#signature_2",
            "text": "def   list ( self ,   tags = None )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      tags  str  Tags to filter the bookmark names  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#share",
            "text": "Share a bookmark by name",
            "title": "share"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#signature_3",
            "text": "def   share ( self ,   bookmark_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#arguments_3",
            "text": "Argument  Type  Description  Default      bookmark_name  str  Name of the bookmark to delete  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#unshare",
            "text": "UnShare a bookmark by name",
            "title": "unshare"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#signature_4",
            "text": "def   unshare ( self ,   bookmark_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#arguments_4",
            "text": "Argument  Type  Description  Default      bookmark_name  str  Name of the bookmark to delete  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#update",
            "text": "Updates a bookmark using a bookmark name",
            "title": "update"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#signature_5",
            "text": "def   update ( self , bookmark_name , tags = None , expires = None , new_bookmark_name = None , description = None ,)",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/bookmark/index.html#arguments_5",
            "text": "Argument  Type  Description  Default      bookmark_name  str  Name of the bookmark to update  None    tags  str  If updating tags, provide new tags. All existing tags on the bookmark will be replaced with new tags  None    expires  str  If updating expiration, provide new expiration date-time 'Format: \"%Y-%m-%dT%H:%M:%S  None    new_bookmark_name  str  If updating bookmark name, provide new name  None    description  str  If updating description, provide new description.  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/branch/index.html",
            "text": "DXIBranch\n\u00b6\n\n\nA branch (Self Service Container Branch) allows you create \nmultiple versions of your data within a container, just as you would do with code.\n\n\nThis class provides methods to trigger some of the most commonly used branch related operations.\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.branch.dxi_branch\n \nimport\n \nDXIBranch\n\n\nfrom\n \ndxi.branch.dxi_branch\n \nimport\n \nDXIBranchConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXIBranch() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXIBranch\n:\n\n    \n\"\"\"\n\n\n    All Self Service Branch Operations\n\n\n    \"\"\"\n\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nengine\n=\nDXIBranchConstants\n.\nENGINE_ID\n,\n\n        \nlog_file_path\n=\nDXIBranchConstants\n.\nLOG_FILE_PATH\n,\n\n        \nconfig_file\n=\nDXIBranchConstants\n.\nCONFIG\n,\n\n        \npoll\n=\nDXIBranchConstants\n.\nPOLL\n,\n\n        \nsingle_thread\n=\nDXIBranchConstants\n.\nSINGLE_THREAD\n,\n\n        \nparallel\n=\nDXIBranchConstants\n.\nPARALLEL\n,\n\n        \naction\n=\nDXIBranchConstants\n.\nACTION\n,\n\n        \nmodule_name\n=\nDXIBranchConstants\n.\nMODULE_NAME\n,\n\n    \n)\n\n\n\n\nactivate\n\u00b6\n\n\nActivates a self service branch\n\n\nSignature\n\u00b6\n\n\ndef\n \nactivate\n(\nself\n,\n \nbranch_name\n,\n \ncontainer_name\n=\nNone\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbranch_name\n\n\nstr\n\n\nName of the branch to create\n\n\nNone\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\n\n\ncreate\n\u00b6\n\n\nCreates a self service branch\n\n\nSignature\n\u00b6\n\n\ndef\n \ncreate\n(\nself\n,\n \nbranch_name\n,\n \ncontainer_name\n,\n \ntemplate_name\n=\nNone\n,\n \nbookmark_name\n=\nNone\n,\n \ntimestamp\n=\nNone\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbranch_name\n\n\nstr\n\n\nName of the branch to create\n\n\nNone\n\n\n\n\n\n\ncontainer_name\n\n\nstr\n\n\nName of the SS Container\n\n\nNone\n\n\n\n\n\n\ntemplate_name\n\n\nstr\n\n\nName of the SS template\n\n\nNone\n\n\n\n\n\n\nbookmark_name\n\n\nstr\n\n\nBookmark to create branch\n\n\nNone\n\n\n\n\n\n\ntimestamp\n\n\nstr\n\n\nTimestamp to create branch\n\n\nNone\n\n\n\n\n\n\n\n\ndelete\n\u00b6\n\n\nDelete a branch by name\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \nbranch_name\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nbranch_name\n\n\nstr\n\n\nName of the branch to create\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all branches on an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n):",
            "title": "DXIBranch"
        },
        {
            "location": "/References/Library_References/branch/index.html#dxibranch",
            "text": "A branch (Self Service Container Branch) allows you create \nmultiple versions of your data within a container, just as you would do with code.  This class provides methods to trigger some of the most commonly used branch related operations.",
            "title": "DXIBranch"
        },
        {
            "location": "/References/Library_References/branch/index.html#how-to-import",
            "text": "from   dxi.branch.dxi_branch   import   DXIBranch  from   dxi.branch.dxi_branch   import   DXIBranchConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/branch/index.html#create-object",
            "text": "obj = DXIBranch()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/branch/index.html#constructor",
            "text": "class   DXIBranch : \n     \"\"\"      All Self Service Branch Operations      \"\"\" \n\n     def   __init__ ( \n         self , \n         engine = DXIBranchConstants . ENGINE_ID , \n         log_file_path = DXIBranchConstants . LOG_FILE_PATH , \n         config_file = DXIBranchConstants . CONFIG , \n         poll = DXIBranchConstants . POLL , \n         single_thread = DXIBranchConstants . SINGLE_THREAD , \n         parallel = DXIBranchConstants . PARALLEL , \n         action = DXIBranchConstants . ACTION , \n         module_name = DXIBranchConstants . MODULE_NAME , \n     )",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/branch/index.html#activate",
            "text": "Activates a self service branch",
            "title": "activate"
        },
        {
            "location": "/References/Library_References/branch/index.html#signature",
            "text": "def   activate ( self ,   branch_name ,   container_name = None )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/branch/index.html#arguments",
            "text": "Argument  Type  Description  Default      branch_name  str  Name of the branch to create  None    container_name  str  Name of the SS Container  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/branch/index.html#create",
            "text": "Creates a self service branch",
            "title": "create"
        },
        {
            "location": "/References/Library_References/branch/index.html#signature_1",
            "text": "def   create ( self ,   branch_name ,   container_name ,   template_name = None ,   bookmark_name = None ,   timestamp = None ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/branch/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      branch_name  str  Name of the branch to create  None    container_name  str  Name of the SS Container  None    template_name  str  Name of the SS template  None    bookmark_name  str  Bookmark to create branch  None    timestamp  str  Timestamp to create branch  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/branch/index.html#delete",
            "text": "Delete a branch by name",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/branch/index.html#signature_2",
            "text": "def   delete ( self ,   branch_name ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/branch/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      branch_name  str  Name of the branch to create  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/branch/index.html#list",
            "text": "List all branches on an engine",
            "title": "list"
        },
        {
            "location": "/References/Library_References/branch/index.html#signature_3",
            "text": "def   list ( self ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/user/index.html",
            "text": "DXIUser\n\u00b6\n\n\nDelphix Virtualization Engine supports 3 different types of users\n- Admin User\n- Standrad Engine User\n  _ Self-Service User\n\n\nRead more about Delphix Users \nhere\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.user.dxi_user\n \nimport\n \nDXIUser\n\n\nfrom\n \ndxi.user.dxi_user\n \nimport\n \nDXIUserConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXIUser() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXIUser\n:\n\n    \n\"\"\"\n\n\n    Class to operate on Delphix User objects.\n\n\n    \"\"\"\n\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nengine\n=\nDXIUserConstants\n.\nENGINE_ID\n,\n\n        \nsingle_thread\n=\nDXIUserConstants\n.\nSINGLE_THREAD\n,\n\n        \nconfig\n=\nDXIUserConstants\n.\nCONFIG\n,\n\n        \nlog_file_path\n=\nDXIUserConstants\n.\nLOG_FILE_PATH\n,\n\n        \npoll\n=\nDXIUserConstants\n.\nPOLL\n,\n\n        \ndebug\n=\nFalse\n,\n\n    \n):\n\n\n\n\nMethods\n\u00b6\n\n\nMethod for all User related operations.  \n\n\ncreate\n\u00b6\n\n\nCreate a User on a Delphix Virtualization Engine\n\n\nSignature\n\u00b6\n\n\n    \ndef\n \ncreate\n(\n\n        \nself\n,\n\n        \nuser_name\n,\n\n        \nuser_password\n,\n\n        \nfirst_name\n,\n\n        \nlast_name\n,\n\n        \nemail_address\n\n\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuser_name\n\n\nstr\n\n\nName of the user to create\n\n\nNone\n\n\n\n\n\n\nuser_password\n\n\nstr\n\n\nPassword for the new user\n\n\nNone\n\n\n\n\n\n\nfirst_name\n\n\nstr\n\n\nFirst Name of the new user\n\n\nNone\n\n\n\n\n\n\nlast_name\n\n\nstr\n\n\nLast Name for the new user\n\n\nNone\n\n\n\n\n\n\nemail_address\n\n\nstr\n\n\nEmail Address for the new user\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all Delphix Virtualization Users on an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n)\n\n\n\n\ndelete\n\u00b6\n\n\nDelete a Delphix Virtualization Engine user.\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \nuser_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuser_name\n\n\nstr\n\n\nName of the user to delete\n\n\nNone\n\n\n\n\n\n\n\n\nupdate\n\u00b6\n\n\nUpdate a Delphix Virtualization Engine user.\n\n\nSignature\n\u00b6\n\n\ndef\n \nupdate\n(\n\n        \nself\n\n        \nuser_name\n,\n\n        \nfirst_name\n=\nNone\n,\n\n        \nlast_name\n=\nNone\n,\n\n        \nemail_address\n=\nNone\n,\n\n        \ncurrent_password\n=\nNone\n,\n\n        \nnew_password\n=\nNone\n\n\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuser_name\n\n\nstr\n\n\nName of the user to update\n\n\nNone\n\n\n\n\n\n\ncurrent_password\n\n\nstr\n\n\nCurrent password for the user\n\n\nNone\n\n\n\n\n\n\nnew_password\n\n\nstr\n\n\nNew password for the user\n\n\nNone\n\n\n\n\n\n\nfirst_name\n\n\nstr\n\n\nFirst Name of the user\n\n\nNone\n\n\n\n\n\n\nlast_name\n\n\nstr\n\n\nLast Name for the user\n\n\nNone\n\n\n\n\n\n\nemail_address\n\n\nstr\n\n\nEmail Address for the user\n\n\nNone",
            "title": "DXIUser"
        },
        {
            "location": "/References/Library_References/user/index.html#dxiuser",
            "text": "Delphix Virtualization Engine supports 3 different types of users\n- Admin User\n- Standrad Engine User\n  _ Self-Service User  Read more about Delphix Users  here",
            "title": "DXIUser"
        },
        {
            "location": "/References/Library_References/user/index.html#how-to-import",
            "text": "from   dxi.user.dxi_user   import   DXIUser  from   dxi.user.dxi_user   import   DXIUserConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/user/index.html#create-object",
            "text": "obj = DXIUser()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/user/index.html#constructor",
            "text": "class   DXIUser : \n     \"\"\"      Class to operate on Delphix User objects.      \"\"\" \n\n     def   __init__ ( \n         self , \n         engine = DXIUserConstants . ENGINE_ID , \n         single_thread = DXIUserConstants . SINGLE_THREAD , \n         config = DXIUserConstants . CONFIG , \n         log_file_path = DXIUserConstants . LOG_FILE_PATH , \n         poll = DXIUserConstants . POLL , \n         debug = False , \n     ):",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/user/index.html#methods",
            "text": "Method for all User related operations.",
            "title": "Methods"
        },
        {
            "location": "/References/Library_References/user/index.html#create",
            "text": "Create a User on a Delphix Virtualization Engine",
            "title": "create"
        },
        {
            "location": "/References/Library_References/user/index.html#signature",
            "text": "def   create ( \n         self , \n         user_name , \n         user_password , \n         first_name , \n         last_name , \n         email_address  ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/user/index.html#arguments",
            "text": "Argument  Type  Description  Default      user_name  str  Name of the user to create  None    user_password  str  Password for the new user  None    first_name  str  First Name of the new user  None    last_name  str  Last Name for the new user  None    email_address  str  Email Address for the new user  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/user/index.html#list",
            "text": "List all Delphix Virtualization Users on an engine",
            "title": "list"
        },
        {
            "location": "/References/Library_References/user/index.html#signature_1",
            "text": "def   list ( self )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/user/index.html#delete",
            "text": "Delete a Delphix Virtualization Engine user.",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/user/index.html#signature_2",
            "text": "def   delete ( self ,   user_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/user/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      user_name  str  Name of the user to delete  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/user/index.html#update",
            "text": "Update a Delphix Virtualization Engine user.",
            "title": "update"
        },
        {
            "location": "/References/Library_References/user/index.html#signature_3",
            "text": "def   update ( \n         self \n         user_name , \n         first_name = None , \n         last_name = None , \n         email_address = None , \n         current_password = None , \n         new_password = None  )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/user/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      user_name  str  Name of the user to update  None    current_password  str  Current password for the user  None    new_password  str  New password for the user  None    first_name  str  First Name of the user  None    last_name  str  Last Name for the user  None    email_address  str  Email Address for the user  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/group/index.html",
            "text": "DXIGroup\n\u00b6\n\n\nGroups in Delphix Virtualization Engine are used to group one or more datasets.\nYou can think of groups as folders to organize your dSources, VDBs and vFiles.\n\n\nHow to import\n\u00b6\n\n\nfrom\n \ndxi.group.dxi_group\n \nimport\n \nDXIGroup\n\n\nfrom\n \ndxi.group.dxi_group\n \nimport\n \nDXIGroupConstants\n\n\n\n\nCreate object\n\u00b6\n\n\n   obj = DXIGroup() \n\n\n\nConstructor\n\u00b6\n\n\nclass\n \nDXIGroup\n:\n\n    \n\"\"\"\n\n\n    CClass to operate on Delphix Group objects.\n\n\n    \"\"\"\n\n\n    \ndef\n \n__init__\n(\n\n        \nself\n,\n\n        \nengine\n=\nDXIGroupConstants\n.\nENGINE_ID\n,\n\n        \nsingle_thread\n=\nDXIGroupConstants\n.\nSINGLE_THREAD\n,\n\n        \nconfig\n=\nDXIGroupConstants\n.\nCONFIG\n,\n\n        \nlog_file_path\n=\nDXIGroupConstants\n.\nLOG_FILE_PATH\n,\n\n        \npoll\n=\nDXIGroupConstants\n.\nPOLL\n,\n\n        \ndebug\n=\nFalse\n,\n\n    \n):\n\n\n\n\nMethods\n\u00b6\n\n\nMethod for all Group related operations.  \n\n\ncreate\n\u00b6\n\n\nCreate a Group on Delphix Engine.\n\n\nSignature\n\u00b6\n\n\n    \ndef\n \ncreate\n(\ngroup_name\n,\n \ndescription\n):\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup_name\n\n\nstr\n\n\nCurrent group name\n\n\nNone\n\n\n\n\n\n\ndescription\n\n\nstr\n\n\nDescription for the group\n\n\nNone\n\n\n\n\n\n\n\n\nlist\n\u00b6\n\n\nList all Groups on an engine\n\n\nSignature\n\u00b6\n\n\ndef\n \nlist\n(\nself\n)\n\n\n\n\ndelete\n\u00b6\n\n\nDelete a Group on Delphix Engine.\n\n\nSignature\n\u00b6\n\n\ndef\n \ndelete\n(\nself\n,\n \ngroup_name\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup_name\n\n\nstr\n\n\nName of the group to delete\n\n\nNone\n\n\n\n\n\n\n\n\nupdate\n\u00b6\n\n\nUpdate a Group on Delphix Engine.\n\n\nSignature\n\u00b6\n\n\ndef\n \nupdate\n(\nself\n,\n \ngroup_name\n,\n \nnew_name\n,\n \nnew_description\n)\n\n\n\n\nArguments\n\u00b6\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ngroup_name\n\n\nstr\n\n\nName of the group to update\n\n\nNone\n\n\n\n\n\n\nnew_name\n\n\nstr\n\n\nNew name for the group\n\n\nNone\n\n\n\n\n\n\nnew_description\n\n\nstr\n\n\nNew description for the group\n\n\nNone",
            "title": "DXIGroup"
        },
        {
            "location": "/References/Library_References/group/index.html#dxigroup",
            "text": "Groups in Delphix Virtualization Engine are used to group one or more datasets.\nYou can think of groups as folders to organize your dSources, VDBs and vFiles.",
            "title": "DXIGroup"
        },
        {
            "location": "/References/Library_References/group/index.html#how-to-import",
            "text": "from   dxi.group.dxi_group   import   DXIGroup  from   dxi.group.dxi_group   import   DXIGroupConstants",
            "title": "How to import"
        },
        {
            "location": "/References/Library_References/group/index.html#create-object",
            "text": "obj = DXIGroup()",
            "title": "Create object"
        },
        {
            "location": "/References/Library_References/group/index.html#constructor",
            "text": "class   DXIGroup : \n     \"\"\"      CClass to operate on Delphix Group objects.      \"\"\" \n\n     def   __init__ ( \n         self , \n         engine = DXIGroupConstants . ENGINE_ID , \n         single_thread = DXIGroupConstants . SINGLE_THREAD , \n         config = DXIGroupConstants . CONFIG , \n         log_file_path = DXIGroupConstants . LOG_FILE_PATH , \n         poll = DXIGroupConstants . POLL , \n         debug = False , \n     ):",
            "title": "Constructor"
        },
        {
            "location": "/References/Library_References/group/index.html#methods",
            "text": "Method for all Group related operations.",
            "title": "Methods"
        },
        {
            "location": "/References/Library_References/group/index.html#create",
            "text": "Create a Group on Delphix Engine.",
            "title": "create"
        },
        {
            "location": "/References/Library_References/group/index.html#signature",
            "text": "def   create ( group_name ,   description ):",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/group/index.html#arguments",
            "text": "Argument  Type  Description  Default      group_name  str  Current group name  None    description  str  Description for the group  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/group/index.html#list",
            "text": "List all Groups on an engine",
            "title": "list"
        },
        {
            "location": "/References/Library_References/group/index.html#signature_1",
            "text": "def   list ( self )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/group/index.html#delete",
            "text": "Delete a Group on Delphix Engine.",
            "title": "delete"
        },
        {
            "location": "/References/Library_References/group/index.html#signature_2",
            "text": "def   delete ( self ,   group_name )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/group/index.html#arguments_1",
            "text": "Argument  Type  Description  Default      group_name  str  Name of the group to delete  None",
            "title": "Arguments"
        },
        {
            "location": "/References/Library_References/group/index.html#update",
            "text": "Update a Group on Delphix Engine.",
            "title": "update"
        },
        {
            "location": "/References/Library_References/group/index.html#signature_3",
            "text": "def   update ( self ,   group_name ,   new_name ,   new_description )",
            "title": "Signature"
        },
        {
            "location": "/References/Library_References/group/index.html#arguments_2",
            "text": "Argument  Type  Description  Default      group_name  str  Name of the group to update  None    new_name  str  New name for the group  None    new_description  str  New description for the group  None",
            "title": "Arguments"
        },
        {
            "location": "/Release_Notes/1.3.2/ReleaseNotes/index.html",
            "text": "DXI 1.3.2 Release Notes\n\u00b6\n\n\nTo install dxi, refer to \nGetting started\n\n\nNew Features\n\u00b6\n\n\n\n\nSupports Delphix Virtualization User operations (Create. Update, Delete, List)\n\n\nSupport for Delphix Virtualization Group operations (Create. Update, Delete, List)\n\n\nAbility to create a CDB when provisioning an Oracle Multi Tenant Datbase ( RAC and non-RAC)\n\n\n\n\n(At this point, dxi docker container does not support the encryption of config file  dxtools.conf. This support will be added in a future release)\n\n\nRequirements\n\u00b6\n\n\n\n\nPython versions 3.7 or above  \n\n\nDelphix Engine 5.3.9 or above\n\n\nmacOS 10.15+  \n\n\nWindows 10\n\n\nRHEL 7,8\n\n\n\n\nFuture releases may add support for additional OS platforms and Delphix Engine versions.  \n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "DXI 1.3.2 Release Notes"
        },
        {
            "location": "/Release_Notes/1.3.2/ReleaseNotes/index.html#dxi-132-release-notes",
            "text": "To install dxi, refer to  Getting started",
            "title": "DXI 1.3.2 Release Notes"
        },
        {
            "location": "/Release_Notes/1.3.2/ReleaseNotes/index.html#new-features",
            "text": "Supports Delphix Virtualization User operations (Create. Update, Delete, List)  Support for Delphix Virtualization Group operations (Create. Update, Delete, List)  Ability to create a CDB when provisioning an Oracle Multi Tenant Datbase ( RAC and non-RAC)   (At this point, dxi docker container does not support the encryption of config file  dxtools.conf. This support will be added in a future release)",
            "title": "New Features"
        },
        {
            "location": "/Release_Notes/1.3.2/ReleaseNotes/index.html#requirements",
            "text": "Python versions 3.7 or above    Delphix Engine 5.3.9 or above  macOS 10.15+    Windows 10  RHEL 7,8   Future releases may add support for additional OS platforms and Delphix Engine versions.",
            "title": "Requirements"
        },
        {
            "location": "/Release_Notes/1.3.2/ReleaseNotes/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/Release_Notes/1.3.1/ReleaseNotes/index.html",
            "text": "DXI 1.3.1 Release Notes\n\u00b6\n\n\nTo install dxi, refer to \nGetting started\n\n\nNew Features\n\u00b6\n\n\n\n\ndxi Dockerfile\n\n\ndxi Docker Hub image\n\n\n\n\n(At this point, dxi docker container does not support the encryption of config file  dxtools.conf. This support will be added in a future release)\n\n\nRequirements\n\u00b6\n\n\n\n\nPython versions 3.7 or above  \n\n\nDelphix Engine 5.3.9 or above\n\n\nmacOS 10.15+  \n\n\nWindows 10\n\n\nRHEL 7,8\n\n\n\n\nFuture releases may add support for additional OS platforms and Delphix Engine versions.  \n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "DXI 1.3.1 Release Notes"
        },
        {
            "location": "/Release_Notes/1.3.1/ReleaseNotes/index.html#dxi-131-release-notes",
            "text": "To install dxi, refer to  Getting started",
            "title": "DXI 1.3.1 Release Notes"
        },
        {
            "location": "/Release_Notes/1.3.1/ReleaseNotes/index.html#new-features",
            "text": "dxi Dockerfile  dxi Docker Hub image   (At this point, dxi docker container does not support the encryption of config file  dxtools.conf. This support will be added in a future release)",
            "title": "New Features"
        },
        {
            "location": "/Release_Notes/1.3.1/ReleaseNotes/index.html#requirements",
            "text": "Python versions 3.7 or above    Delphix Engine 5.3.9 or above  macOS 10.15+    Windows 10  RHEL 7,8   Future releases may add support for additional OS platforms and Delphix Engine versions.",
            "title": "Requirements"
        },
        {
            "location": "/Release_Notes/1.3.1/ReleaseNotes/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/Release_Notes/1.3.0/ReleaseNotes/index.html",
            "text": "DXI 1.3.0 Release Notes\n\u00b6\n\n\nTo install dxi, refer to \nGetting started\n\n\nNew Features\n\u00b6\n\n\n\n\nOracle & SQLServer Clusters : Release 1.3.0 of dxi adds support for \n\n\nIngestion of an Oracle RAC database.\n\n\nIngestion of a Windows AG Cluster database.\n\n\nProvisioning a virtual database to an Oracle RAC. \n\n\nProvisioning an Oracle Multi-Tenant PDB. \n\n\n\n\n\n\n\n\nRequirements\n\u00b6\n\n\n\n\nPython versions 3.7 or above  \n\n\nDelphix Engine 5.3.9 or above\n\n\nmacOS 10.15+  \n\n\nWindows 10\n\n\nRHEL 7,8\n\n\n\n\nFuture releases may add support for additional OS platforms and Delphix Engine versions.  \n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "DXI 1.3.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.3.0/ReleaseNotes/index.html#dxi-130-release-notes",
            "text": "To install dxi, refer to  Getting started",
            "title": "DXI 1.3.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.3.0/ReleaseNotes/index.html#new-features",
            "text": "Oracle & SQLServer Clusters : Release 1.3.0 of dxi adds support for   Ingestion of an Oracle RAC database.  Ingestion of a Windows AG Cluster database.  Provisioning a virtual database to an Oracle RAC.   Provisioning an Oracle Multi-Tenant PDB.",
            "title": "New Features"
        },
        {
            "location": "/Release_Notes/1.3.0/ReleaseNotes/index.html#requirements",
            "text": "Python versions 3.7 or above    Delphix Engine 5.3.9 or above  macOS 10.15+    Windows 10  RHEL 7,8   Future releases may add support for additional OS platforms and Delphix Engine versions.",
            "title": "Requirements"
        },
        {
            "location": "/Release_Notes/1.3.0/ReleaseNotes/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/Release_Notes/1.2.0/ReleaseNotes/index.html",
            "text": "DXI 1.2.0 Release Notes\n\u00b6\n\n\nTo install dxi, refer to \nGetting started\n\n\nNew Features\n\u00b6\n\n\n\n\nExecutable Binaries : With release 1.2.0, dxi ships as executable binaries for the following platforms\n\n\nmacOS\n\n\nWindows10\n\n\nRed Hat Enterprise Linux 7 and 8\n\n\n\n\n\n\n\n\nRequirements\n\u00b6\n\n\n\n\nPython versions 3.7 or above  \n\n\nDelphix Engine 5.3.9 or above\n\n\nmacOS 10.15+  \n\n\nWindows 10\n\n\nRHEL 7,8\n\n\n\n\nFuture releases may add support for additional OS platforms and Delphix Engine versions.  \n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "DXI 1.2.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.2.0/ReleaseNotes/index.html#dxi-120-release-notes",
            "text": "To install dxi, refer to  Getting started",
            "title": "DXI 1.2.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.2.0/ReleaseNotes/index.html#new-features",
            "text": "Executable Binaries : With release 1.2.0, dxi ships as executable binaries for the following platforms  macOS  Windows10  Red Hat Enterprise Linux 7 and 8",
            "title": "New Features"
        },
        {
            "location": "/Release_Notes/1.2.0/ReleaseNotes/index.html#requirements",
            "text": "Python versions 3.7 or above    Delphix Engine 5.3.9 or above  macOS 10.15+    Windows 10  RHEL 7,8   Future releases may add support for additional OS platforms and Delphix Engine versions.",
            "title": "Requirements"
        },
        {
            "location": "/Release_Notes/1.2.0/ReleaseNotes/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/Release_Notes/1.1.0/ReleaseNotes/index.html",
            "text": "DXI 1.1.0 Release Notes\n\u00b6\n\n\nTo install dxi, refer to \nGetting started\n\n\nNew Features\n\u00b6\n\n\n\n\nEncryption : Ability to encrypt username and password data in config file.\n\n\n\n\nSupported versions\n\u00b6\n\n\nThe current release supports  \n\n\n\n\nPython 3.7 or above  \n\n\nmacOS 10.15+  \n\n\nWindows 10  \n\n\nDelphix Engine 5.3.9 or above  \n\n\n\n\nFuture releases may add support for additional OS platforms and Delphix Engine versions.  \n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "DXI 1.1.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.1.0/ReleaseNotes/index.html#dxi-110-release-notes",
            "text": "To install dxi, refer to  Getting started",
            "title": "DXI 1.1.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.1.0/ReleaseNotes/index.html#new-features",
            "text": "Encryption : Ability to encrypt username and password data in config file.",
            "title": "New Features"
        },
        {
            "location": "/Release_Notes/1.1.0/ReleaseNotes/index.html#supported-versions",
            "text": "The current release supports     Python 3.7 or above    macOS 10.15+    Windows 10    Delphix Engine 5.3.9 or above     Future releases may add support for additional OS platforms and Delphix Engine versions.",
            "title": "Supported versions"
        },
        {
            "location": "/Release_Notes/1.1.0/ReleaseNotes/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/Release_Notes/1.0.0/ReleaseNotes/index.html",
            "text": "DXI 1.0.0 Release Notes\n\u00b6\n\n\nTo install dxi, refer to \nGetting started\n\n\nFeatures\n\u00b6\n\n\nDxi 1.0.0 release is the first release of the dxi.\n\nWe are introducing both a Python Library and Python-based CLI.  \n\n\nSupported versions\n\u00b6\n\n\nThe current release supports  \n\n\n\n\nPython 3.7 or above  \n\n\nmacOS 10.15+  \n\n\nWindows 10  \n\n\nDelphix Engine 5.3.9 or above  \n\n\n\n\nFuture releases may add support for additional OS platforms and Delphix Engine versions.  \n\n\nForward compatibility\n\u00b6\n\n\nDxi Library and CLIs use Delphix Virtualization APIs as the point of orchestration for all Delphix operations.\nOur long term strategic plan as a company is to build a New API Layer  that is simple and easy for end users to consume. This New API Layer will eventually become the single point of orchestration for all Delphix automation operations in future.\n\n\nThe New API Layer may also come with its own client library & CLI with functionality that \noverlaps dxi\n\n\nAlthough we will encourage users to use the API Gateway once available, \nwe will continue to support dxi in the foreseeable future.\n\n\nWe may also build future versions of dxi that support the New API Layer. \nHowever, forward compatibility between the current versions of dxi ( using Delphix Virtualization APIs) and the future versions ( using New API Layer )  is not guaranteed.\n\n\nWe also intended to make the migration from dxi to the New API Layer \nsolution easier for our users by either automating the process to make it transparent to dxi users or help them update their code.\n\n\nHowever,   \n\n\n\n\nForward compatibility is not guaranteed between current versions of dxi ( that use virtualization apis) and future versions of dxi ( that use New API Layer)\n\n\nForward compatibility is not guaranteed between dxi and the New API Layer solution\n\n\n\n\nAs such, it is possible that manual work may be required for migration to a future version/solution.\n\n\nQuestions?\n\u00b6\n\n\nIf you have questions, bugs or feature requests reach out to us via \nemail",
            "title": "DXI 1.0.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.0.0/ReleaseNotes/index.html#dxi-100-release-notes",
            "text": "To install dxi, refer to  Getting started",
            "title": "DXI 1.0.0 Release Notes"
        },
        {
            "location": "/Release_Notes/1.0.0/ReleaseNotes/index.html#features",
            "text": "Dxi 1.0.0 release is the first release of the dxi. \nWe are introducing both a Python Library and Python-based CLI.",
            "title": "Features"
        },
        {
            "location": "/Release_Notes/1.0.0/ReleaseNotes/index.html#supported-versions",
            "text": "The current release supports     Python 3.7 or above    macOS 10.15+    Windows 10    Delphix Engine 5.3.9 or above     Future releases may add support for additional OS platforms and Delphix Engine versions.",
            "title": "Supported versions"
        },
        {
            "location": "/Release_Notes/1.0.0/ReleaseNotes/index.html#forward-compatibility",
            "text": "Dxi Library and CLIs use Delphix Virtualization APIs as the point of orchestration for all Delphix operations.\nOur long term strategic plan as a company is to build a New API Layer  that is simple and easy for end users to consume. This New API Layer will eventually become the single point of orchestration for all Delphix automation operations in future.  The New API Layer may also come with its own client library & CLI with functionality that \noverlaps dxi  Although we will encourage users to use the API Gateway once available, \nwe will continue to support dxi in the foreseeable future.  We may also build future versions of dxi that support the New API Layer. \nHowever, forward compatibility between the current versions of dxi ( using Delphix Virtualization APIs) and the future versions ( using New API Layer )  is not guaranteed.  We also intended to make the migration from dxi to the New API Layer \nsolution easier for our users by either automating the process to make it transparent to dxi users or help them update their code.  However,      Forward compatibility is not guaranteed between current versions of dxi ( that use virtualization apis) and future versions of dxi ( that use New API Layer)  Forward compatibility is not guaranteed between dxi and the New API Layer solution   As such, it is possible that manual work may be required for migration to a future version/solution.",
            "title": "Forward compatibility"
        },
        {
            "location": "/Release_Notes/1.0.0/ReleaseNotes/index.html#questions",
            "text": "If you have questions, bugs or feature requests reach out to us via  email",
            "title": "Questions?"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html",
            "text": "Integrate using dxi cli\n\u00b6\n\n\nNow that you have installed and configured dxi, let us explore how we can integrate Delphix operations into workflows.\nWe will be using a sample Jenkins Pipeline as an example.\n\n\nA Jenkins Pipeline Example 1\n\u00b6\n\n\nOur first example here is a Jenkins Declarative Pipeline that runs a set of automated tests.\nWe want to integrate a VDB Snapshot operation and a VDB Rewind operation into this pipeline.\nThis pipeline has 3 steps - \n\n\n\n\nPre-Test : Sets up the test environment\n\n\nAutomated Test1 : Runs a set of automation tests using a Delphix VDB named \"vdb1\"\n\n\nPost-Test: Tears down the test environment\n\n\n\n\n\n\nAdding a Delphix Snapshot Operation\n\u00b6\n\n\nLet's say, we want to modify this pipeline such that it take a snapshot of the VDB \n(vdb1)\n in Delphix before the tests run.\n\n\n\nFor this we can use the \ndxi snapshot\n cli command as follows\n\n\n\n    \n\n        \nJenkins Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \n...\n\n\n      \nstage\n(\n'VDB Snapshot'\n)\n \n{\n\n          \nsteps\n \n{\n\n\n            \nsh\n \n'/path/to/dxi database snapshot --name vdb1'\n\n\n          \n}\n\n      \n}\n\n\n      \n...\n\n    \n}\n\n\n\n    \n\n\n\n\n\nAdding a Delphix Rewind Operation\n\u00b6\n\n\nNext, we want to rewind the VDB \n(vdb1)\n after the tests are run.\n\n\n\nFor this we can use the \ndxi rewind\n cli command as follows\n\n\n\n    \n\n        \nJenkins Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \n...\n\n\n      \nstage\n(\n'VDB Snapshot'\n)\n \n{\n\n          \nsteps\n \n{\n\n\n            \nsh\n \n'/path/to/dxi database snapshot --name vdb1'\n\n\n          \n}\n\n      \n}\n\n      \n...\n\n      \nstage\n(\n'Automated Test 1'\n)\n \n{\n  \n      \n...\n\n      \n}\n\n      \nstage\n(\n'Rewind VDB'\n)\n \n{\n\n          \nsteps\n \n{\n\n\n            \nsh\n \n'/path/to/dxi database rewind --name vdb1'\n\n\n          \n}\n\n      \n}\n\n    \n}\n\n\n\n    \n\n\n\n\n\nThe Finished Pipeline\n\u00b6\n\n\n\n\nAnd you have now integrated Delphix Snapshot and Rewind operations into a Jenkins Pipeline.\n\n\nA Jenkins Pipeline Example 2\n\u00b6\n\n\nOur second example here is a Jenkins Declarative Pipeline that runs a series of automated tests, one after the other.  \n\n\nWe will use Delphix Self Service Containers (a group of VDBs) for this example as we want to create bookmarks between the different test executions.\nThese bookmarks are references to specific points in time on our container's timeline and can\nbe used to rewind our container to the timepoint referenced by the bookmark.\n\n\nThis pipeline has 4 staps -\n\n\n\n\nPre-Test : Sets up the test environment\n\n\nAutomated Test1 : Runs first set of automation tests using a Delphix Container named \ncontainer1\n\n\nAutomated Test2 : Runs second set of automation tests using a Delphix Container named \ncontainer1\n\n\nPost-Test: Tears down the test environment\n\n\n\n\nWe will integrate the following Delphix Operations into this pipeline  \n\n\n\n\nCreate a bookmark \nbmk-pre-test1\n before Automated Test 1  \n\n\nCreate a bookmark \nbmk-pre-test2\n before Automated Test 2  \n\n\nRewind the Container \ncontainer1\n to \nbmk-pre-test1\n after Automation Test 2  \n\n\n\n\n\n\nAdding the Container Bookmark Operations\n\u00b6\n\n\nWe can use \ndxi bookmark\n cli command as follows\n\n\n\n    \n\n        \nJenkins Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \n...\n\n\n      \nstage\n(\n'Create bmk-pre-test1'\n)\n \n{\n\n          \nsteps\n \n{\n\n\n            \nsh\n \n'/path/to/dxi  bookmark create\n\n\n                    --bookmarkname bmk-pre-test1 --containername container1'\n\n\n          \n}\n\n      \n}\n\n      \nstage\n(\n'Automated Test 2'\n)\n \n{\n\n          \n...\n\n      \n}\n\n      \nstage\n(\n'Create bmk-pre-test2'\n)\n \n{\n\n          \nsteps\n \n{\n\n\n            \nsh\n \n'/path/to/dxi bookmark create\n\n\n                    --bookmarkname bmk-pre-test2 --containername container1'\n\n\n          \n}\n\n      \n}\n\n      \n...\n\n    \n}\n\n\n\n    \n\n\n\n\n\nAdding the Container Restore Operations\n\u00b6\n\n\nNext, we want to rewind/restore the container \ncontainer1\n to \nbmk-pre-test2>/span>\n\n\nFor this we can use the \ndxi container\n cli command as follows\n\n\n\n    \n\n        \nJenkins Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \n...\n\n\n      \nstage\n(\n'Create bmk-pre-test1'\n)\n \n{\n\n          \nsteps\n \n{\n\n            \nsh\n \n'/path/to/dxi bookmark create\n\n\n                    --bookmarkname bmk-pre-test1 --containername container1'\n\n          \n}\n\n      \n}\n\n      \nstage\n(\n'Automated Test 2'\n)\n \n{\n\n          \n...\n\n      \n}\n\n      \nstage\n(\n'Create bmk-pre-test2'\n)\n \n{\n\n          \nsteps\n \n{\n\n            \nsh\n \n'/path/to/dxi bookmark create\n\n\n                    --bookmarkname bmk-pre-test2 --containername container1'\n\n          \n}\n\n      \n}\n\n      \nstage\n(\n'Restore to bmk-pre-test1'\n)\n \n{\n\n          \nsteps\n \n{\n\n\n            \nsh\n \n'/path/to/dxi container restore\n\n\n                    --bookmark_name bmk-pre-test2 --container_name container1'\n\n\n          \n}\n\n      \n}\n\n      \n...\n\n    \n}\n\n\n\n    \n\n\n\n\n\nThe Finished Pipeline\n\u00b6\n\n\n\n\nAnd you have now integrated Delphix Self Service Container Operations into a Jenkins Pipeline.\n\n\nWhat's Next?\n\u00b6\n\n\nAs you have seen, with dxi, integration of Delphix Operations into your workflows take only a few minutes.\nFor information on all supported Delphix operations, read our \nReferences\n section.",
            "title": "Integrate using dxi cli"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#integrate-using-dxi-cli",
            "text": "Now that you have installed and configured dxi, let us explore how we can integrate Delphix operations into workflows.\nWe will be using a sample Jenkins Pipeline as an example.",
            "title": "Integrate using dxi cli"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#a-jenkins-pipeline-example-1",
            "text": "Our first example here is a Jenkins Declarative Pipeline that runs a set of automated tests.\nWe want to integrate a VDB Snapshot operation and a VDB Rewind operation into this pipeline.\nThis pipeline has 3 steps -    Pre-Test : Sets up the test environment  Automated Test1 : Runs a set of automation tests using a Delphix VDB named \"vdb1\"  Post-Test: Tears down the test environment",
            "title": "A Jenkins Pipeline Example 1"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#adding-a-delphix-snapshot-operation",
            "text": "Let's say, we want to modify this pipeline such that it take a snapshot of the VDB  (vdb1)  in Delphix before the tests run.  For this we can use the  dxi snapshot  cli command as follows  \n     \n         Jenkins Pipeline Script \n     \n     \n              pipeline   { \n       ... \n\n       stage ( 'VDB Snapshot' )   { \n           steps   {               sh   '/path/to/dxi database snapshot --name vdb1'             } \n       } \n\n       ... \n     }",
            "title": "Adding a Delphix Snapshot Operation"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#adding-a-delphix-rewind-operation",
            "text": "Next, we want to rewind the VDB  (vdb1)  after the tests are run.  For this we can use the  dxi rewind  cli command as follows  \n     \n         Jenkins Pipeline Script \n     \n     \n              pipeline   { \n       ... \n\n       stage ( 'VDB Snapshot' )   { \n           steps   {               sh   '/path/to/dxi database snapshot --name vdb1'             } \n       } \n       ... \n       stage ( 'Automated Test 1' )   {   \n       ... \n       } \n       stage ( 'Rewind VDB' )   { \n           steps   {               sh   '/path/to/dxi database rewind --name vdb1'             } \n       } \n     }",
            "title": "Adding a Delphix Rewind Operation"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#the-finished-pipeline",
            "text": "And you have now integrated Delphix Snapshot and Rewind operations into a Jenkins Pipeline.",
            "title": "The Finished Pipeline"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#a-jenkins-pipeline-example-2",
            "text": "Our second example here is a Jenkins Declarative Pipeline that runs a series of automated tests, one after the other.    We will use Delphix Self Service Containers (a group of VDBs) for this example as we want to create bookmarks between the different test executions.\nThese bookmarks are references to specific points in time on our container's timeline and can\nbe used to rewind our container to the timepoint referenced by the bookmark.  This pipeline has 4 staps -   Pre-Test : Sets up the test environment  Automated Test1 : Runs first set of automation tests using a Delphix Container named  container1  Automated Test2 : Runs second set of automation tests using a Delphix Container named  container1  Post-Test: Tears down the test environment   We will integrate the following Delphix Operations into this pipeline     Create a bookmark  bmk-pre-test1  before Automated Test 1    Create a bookmark  bmk-pre-test2  before Automated Test 2    Rewind the Container  container1  to  bmk-pre-test1  after Automation Test 2",
            "title": "A Jenkins Pipeline Example 2"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#adding-the-container-bookmark-operations",
            "text": "We can use  dxi bookmark  cli command as follows  \n     \n         Jenkins Pipeline Script \n     \n     \n              pipeline   { \n       ... \n\n       stage ( 'Create bmk-pre-test1' )   { \n           steps   {               sh   '/path/to/dxi  bookmark create                      --bookmarkname bmk-pre-test1 --containername container1'             } \n       } \n       stage ( 'Automated Test 2' )   { \n           ... \n       } \n       stage ( 'Create bmk-pre-test2' )   { \n           steps   {               sh   '/path/to/dxi bookmark create                      --bookmarkname bmk-pre-test2 --containername container1'             } \n       } \n       ... \n     }",
            "title": "Adding the Container Bookmark Operations"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#adding-the-container-restore-operations",
            "text": "Next, we want to rewind/restore the container  container1  to  bmk-pre-test2>/span>  For this we can use the  dxi container  cli command as follows  \n     \n         Jenkins Pipeline Script \n     \n     \n              pipeline   { \n       ... \n\n       stage ( 'Create bmk-pre-test1' )   { \n           steps   { \n             sh   '/path/to/dxi bookmark create                      --bookmarkname bmk-pre-test1 --containername container1' \n           } \n       } \n       stage ( 'Automated Test 2' )   { \n           ... \n       } \n       stage ( 'Create bmk-pre-test2' )   { \n           steps   { \n             sh   '/path/to/dxi bookmark create                      --bookmarkname bmk-pre-test2 --containername container1' \n           } \n       } \n       stage ( 'Restore to bmk-pre-test1' )   { \n           steps   {               sh   '/path/to/dxi container restore                      --bookmark_name bmk-pre-test2 --container_name container1'             } \n       } \n       ... \n     }",
            "title": "Adding the Container Restore Operations"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#the-finished-pipeline_1",
            "text": "And you have now integrated Delphix Self Service Container Operations into a Jenkins Pipeline.",
            "title": "The Finished Pipeline"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins/index.html#whats-next",
            "text": "As you have seen, with dxi, integration of Delphix Operations into your workflows take only a few minutes.\nFor information on all supported Delphix operations, read our  References  section.",
            "title": "What's Next?"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html",
            "text": "Integrate using dxi container\n\u00b6\n\n\nLet us explore how we can integrate Delphix operations into workflows.\nWe will be using a sample \nJenkins Pipeline using Docker\n as an example.\n\n\nA Jenkins Pipeline Example 1\n\u00b6\n\n\nOur first example here is a Jenkins Declarative Pipeline that runs a set of automated tests.\nWe want to integrate a VDB Snapshot operation and a VDB Rewind operation into this pipeline.\nThis pipeline has 3 steps -\n\n\n\n\nPre-Test : Sets up the test environment\n\n\nAutomated Test1 : Runs a set of automation tests using a Delphix VDB named \"vdb1\"\n\n\nPost-Test: Tears down the test environment\n\n\n\n\n\n\nAdding a Delphix Snapshot Operation\n\u00b6\n\n\nLet's say, we want to modify this pipeline such that it take a snapshot of the VDB \n(vdb1)\n in Delphix before the tests run.\n\n\n\nFor this we can use the \ndxi snapshot\n cli command as follows\n\n\n\n    \n\n        \nJenkins Docker Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \n...\n\n\n      \nagent\n \n{\n\n        \ndockerfile\n \n{\n\n          \ndir\n \n'/path/to/dockerfile'\n\n          \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                --build-arg DXI_GID=$(id -g)'\n\n          \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                --entrypoint='\n\n        \n}\n\n      \n}\n\n\n      \nstage\n(\n'VDB Snapshot'\n)\n \n{\n\n          \nsteps\n \n{\n\n            \nsh\n \n'dxi database snapshot --name vdb1'\n\n          \n}\n\n      \n}\n\n\n      \n...\n\n    \n}\n\n\n\n    \n\n\n\n\n\nAdding a Delphix Rewind Operation\n\u00b6\n\n\nNext, we want to rewind the VDB \n(vdb1)\n after the tests are run.\n\n\n\nFor this we can use the \ndxi rewind\n cli command as follows\n\n\n\n    \n\n        \nJenkins Docker Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \n...\n\n      \nagent\n \nnone\n\n\n      \nstage\n(\n'VDB Snapshot'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n            \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'dxi database snapshot --name vdb1'\n\n          \n}\n\n      \n}\n\n\n      \n...\n\n\n      \nstage\n(\nagent\n \nany\n;\n \n'Automated Test 1'\n)\n \n{\n  \n      \n...\n\n      \n}\n\n\n      \n...\n\n\n      \nstage\n(\n'Rewind VDB'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n            \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'dxi database rewind --name vdb1'\n\n          \n}\n\n      \n}\n\n    \n}\n\n\n\n    \n\n\n\n\n\nThe Finished Pipeline\n\u00b6\n\n\n\n\nAnd you have now integrated Delphix Snapshot and Rewind operations into a Jenkins Pipeline.\n\n\nA Jenkins Pipeline Example 2\n\u00b6\n\n\nOur second example here is a Jenkins Declarative Pipeline that runs a series of automated tests, one after the other.\n\n\nWe will use Delphix Self Service Containers (a group of VDBs) for this example as we want to create bookmarks between the different test executions.\nThese bookmarks are references to specific points in time on our container's timeline and can\nbe used to rewind our container to the timepoint referenced by the bookmark.\n\n\nThis pipeline has 4 staps -\n\n\n\n\nPre-Test : Sets up the test environment\n\n\nAutomated Test1 : Runs first set of automation tests using a Delphix Container named \ncontainer1\n\n\nAutomated Test2 : Runs second set of automation tests using a Delphix Container named \ncontainer1\n\n\nPost-Test: Tears down the test environment\n\n\n\n\nWe will integrate the following Delphix Operations into this pipeline\n\n\n\n\nCreate a bookmark \nbmk-pre-test1\n before Automated Test 1\n\n\nCreate a bookmark \nbmk-pre-test2\n before Automated Test 2\n\n\nRewind the Container \ncontainer1\n to \nbmk-pre-test1\n after Automation Test 2\n\n\n\n\n\n\nAdding the Container Bookmark Operations\n\u00b6\n\n\nWe can use \ndxi bookmark\n cli command as follows\n\n\n\n    \n\n        \nJenkins Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \nagent\n \nnone\n\n      \n...\n\n\n      \nstage\n(\n'Create bmk-pre-test1'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n              \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'dxi  bookmark create\n\n\n                    --bookmarkname bmk-pre-test1\n\n\n                    --containername container1'\n\n          \n}\n\n      \n}\n\n\n      \n...\n\n\n      \nstage\n(\nagent\n \nany\n;\n \n'Automated Test 2'\n)\n \n{\n\n          \n...\n\n      \n}\n\n\n      \n...\n\n\n      \nstage\n(\n'Create bmk-pre-test2'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n              \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'dxi bookmark create\n\n\n                    --bookmarkname bmk-pre-test2\n\n\n                    --containername container1'\n\n          \n}\n\n      \n}\n\n      \n...\n\n    \n}\n\n\n\n    \n\n\n\n\n\nAdding the Container Restore Operations\n\u00b6\n\n\nNext, we want to rewind/restore the container \ncontainer1\n to \nbmk-pre-test2>/span>\n\n\nFor this we can use the \ndxi container\n cli command as follows\n\n\n\n    \n\n        \nJenkins Pipeline Script\n\n    \n\n    \n\n        \n    \npipeline\n \n{\n\n      \nagent\n \nnone\n\n      \n...\n\n\n      \nstage\n(\n'Create bmk-pre-test1'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n                  \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'/path/to/dxi bookmark create\n\n\n                    --bookmarkname bmk-pre-test1 --containername container1'\n\n          \n}\n\n      \n}\n\n\n      \n...\n\n\n      \nstage\n(\nagent\n \nany\n;\n \n'Automated Test 2'\n)\n \n{\n\n          \n...\n\n      \n}\n\n\n      \n...\n\n\n      \nstage\n(\n'Create bmk-pre-test2'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n              \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'dxi bookmark create\n\n\n                    --bookmarkname bmk-pre-test2 --containername container1'\n\n          \n}\n\n      \n}\n\n\n      \nstage\n(\n'Restore to bmk-pre-test1'\n)\n \n{\n\n          \nagent\n \n{\n\n            \ndockerfile\n \n{\n\n              \ndir\n \n'/path/to/dockerfile'\n\n              \nadditionalBuildArgs\n  \n'--build-arg DXI_UID=$(id -u)\n\n\n                                    --build-arg DXI_GID=$(id -g)'\n\n              \nargs\n \n'-v /path/to/config:/dxi-data/config\n\n\n                    --entrypoint='\n\n              \n}\n\n          \n}\n\n          \nsteps\n \n{\n\n            \nsh\n \n'/path/to/dxi container restore\n\n\n                    --bookmark_name bmk-pre-test2 --container_name container1'\n\n          \n}\n\n      \n}\n\n      \n...\n\n    \n}\n\n\n\n    \n\n\n\n\n\nThe Finished Pipeline\n\u00b6\n\n\n\n\nAnd you have now integrated Delphix Self Service Container Operations into a Jenkins Pipeline.\n\n\nWhat's Next?\n\u00b6\n\n\nAs you have seen, with dxi, integration of Delphix Operations into your workflows take only a few minutes.\nFor information on all supported Delphix operations, read our \nReferences\n section.",
            "title": "Integrate using dxi container"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#integrate-using-dxi-container",
            "text": "Let us explore how we can integrate Delphix operations into workflows.\nWe will be using a sample  Jenkins Pipeline using Docker  as an example.",
            "title": "Integrate using dxi container"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#a-jenkins-pipeline-example-1",
            "text": "Our first example here is a Jenkins Declarative Pipeline that runs a set of automated tests.\nWe want to integrate a VDB Snapshot operation and a VDB Rewind operation into this pipeline.\nThis pipeline has 3 steps -   Pre-Test : Sets up the test environment  Automated Test1 : Runs a set of automation tests using a Delphix VDB named \"vdb1\"  Post-Test: Tears down the test environment",
            "title": "A Jenkins Pipeline Example 1"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#adding-a-delphix-snapshot-operation",
            "text": "Let's say, we want to modify this pipeline such that it take a snapshot of the VDB  (vdb1)  in Delphix before the tests run.  For this we can use the  dxi snapshot  cli command as follows  \n     \n         Jenkins Docker Pipeline Script \n     \n     \n              pipeline   { \n       ... \n\n       agent   { \n         dockerfile   { \n           dir   '/path/to/dockerfile' \n           additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                  --build-arg DXI_GID=$(id -g)' \n           args   '-v /path/to/config:/dxi-data/config                  --entrypoint=' \n         } \n       } \n\n       stage ( 'VDB Snapshot' )   { \n           steps   { \n             sh   'dxi database snapshot --name vdb1' \n           } \n       } \n\n       ... \n     }",
            "title": "Adding a Delphix Snapshot Operation"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#adding-a-delphix-rewind-operation",
            "text": "Next, we want to rewind the VDB  (vdb1)  after the tests are run.  For this we can use the  dxi rewind  cli command as follows  \n     \n         Jenkins Docker Pipeline Script \n     \n     \n              pipeline   { \n       ... \n       agent   none \n\n       stage ( 'VDB Snapshot' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n             } \n           } \n           steps   { \n             sh   'dxi database snapshot --name vdb1' \n           } \n       } \n\n       ... \n\n       stage ( agent   any ;   'Automated Test 1' )   {   \n       ... \n       } \n\n       ... \n\n       stage ( 'Rewind VDB' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n             } \n           } \n           steps   { \n             sh   'dxi database rewind --name vdb1' \n           } \n       } \n     }",
            "title": "Adding a Delphix Rewind Operation"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#the-finished-pipeline",
            "text": "And you have now integrated Delphix Snapshot and Rewind operations into a Jenkins Pipeline.",
            "title": "The Finished Pipeline"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#a-jenkins-pipeline-example-2",
            "text": "Our second example here is a Jenkins Declarative Pipeline that runs a series of automated tests, one after the other.  We will use Delphix Self Service Containers (a group of VDBs) for this example as we want to create bookmarks between the different test executions.\nThese bookmarks are references to specific points in time on our container's timeline and can\nbe used to rewind our container to the timepoint referenced by the bookmark.  This pipeline has 4 staps -   Pre-Test : Sets up the test environment  Automated Test1 : Runs first set of automation tests using a Delphix Container named  container1  Automated Test2 : Runs second set of automation tests using a Delphix Container named  container1  Post-Test: Tears down the test environment   We will integrate the following Delphix Operations into this pipeline   Create a bookmark  bmk-pre-test1  before Automated Test 1  Create a bookmark  bmk-pre-test2  before Automated Test 2  Rewind the Container  container1  to  bmk-pre-test1  after Automation Test 2",
            "title": "A Jenkins Pipeline Example 2"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#adding-the-container-bookmark-operations",
            "text": "We can use  dxi bookmark  cli command as follows  \n     \n         Jenkins Pipeline Script \n     \n     \n              pipeline   { \n       agent   none \n       ... \n\n       stage ( 'Create bmk-pre-test1' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n               } \n           } \n           steps   { \n             sh   'dxi  bookmark create                      --bookmarkname bmk-pre-test1                      --containername container1' \n           } \n       } \n\n       ... \n\n       stage ( agent   any ;   'Automated Test 2' )   { \n           ... \n       } \n\n       ... \n\n       stage ( 'Create bmk-pre-test2' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n               } \n           } \n           steps   { \n             sh   'dxi bookmark create                      --bookmarkname bmk-pre-test2                      --containername container1' \n           } \n       } \n       ... \n     }",
            "title": "Adding the Container Bookmark Operations"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#adding-the-container-restore-operations",
            "text": "Next, we want to rewind/restore the container  container1  to  bmk-pre-test2>/span>  For this we can use the  dxi container  cli command as follows  \n     \n         Jenkins Pipeline Script \n     \n     \n              pipeline   { \n       agent   none \n       ... \n\n       stage ( 'Create bmk-pre-test1' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n                   } \n           } \n           steps   { \n             sh   '/path/to/dxi bookmark create                      --bookmarkname bmk-pre-test1 --containername container1' \n           } \n       } \n\n       ... \n\n       stage ( agent   any ;   'Automated Test 2' )   { \n           ... \n       } \n\n       ... \n\n       stage ( 'Create bmk-pre-test2' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n               } \n           } \n           steps   { \n             sh   'dxi bookmark create                      --bookmarkname bmk-pre-test2 --containername container1' \n           } \n       } \n\n       stage ( 'Restore to bmk-pre-test1' )   { \n           agent   { \n             dockerfile   { \n               dir   '/path/to/dockerfile' \n               additionalBuildArgs    '--build-arg DXI_UID=$(id -u)                                      --build-arg DXI_GID=$(id -g)' \n               args   '-v /path/to/config:/dxi-data/config                      --entrypoint=' \n               } \n           } \n           steps   { \n             sh   '/path/to/dxi container restore                      --bookmark_name bmk-pre-test2 --container_name container1' \n           } \n       } \n       ... \n     }",
            "title": "Adding the Container Restore Operations"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#the-finished-pipeline_1",
            "text": "And you have now integrated Delphix Self Service Container Operations into a Jenkins Pipeline.",
            "title": "The Finished Pipeline"
        },
        {
            "location": "/Building_Your_First_Integrations/Jenkins Integration/Jenkins_docker/index.html#whats-next",
            "text": "As you have seen, with dxi, integration of Delphix Operations into your workflows take only a few minutes.\nFor information on all supported Delphix operations, read our  References  section.",
            "title": "What's Next?"
        }
    ]
}