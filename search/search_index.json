{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview \u00b6 MySQL plugin has been developed to ingest and virtualize MySQL data sources using Delphix. What does MySQL plugin do? \u00b6 The Delphix MySQL Plugin can virtualize a single instance MySQL database and create multiple virtual copies as required. There are two modes of operation of the plugin based on how the MySQL dSource is created and kept in-sync with source database. Replication \u00b6 In the Replication mode, Delphix uses MySQL's built-in replication technology to keep the Delphix dSource in-sync with the MySQL source databases. Creation of the dSource requires a full backup of the source database(s) and there are two options to providing this backup. Delphix Managed Backup In this option, Delphix is provided with the required information to take a full backup of the source database. User Provided Backup In this option, user provides Delphix with an existing full backup. Delphix initializes the staging database using the full backup and configures the staging database as a replicated slave of the source database. MySQL Replication keeps the data in the staging database in-sync with the source. Manual Ingestion \u00b6 In the Manual Ingestion mode, the data in Delphix dSource is managed manually by the end users. Delphix creates a seed MySQL staging database which can be managed via Delphix. The end user assumes the responsibility of keeping the data in the staging database in-sync with the source database. Where to Start? \u00b6 By now, you must have an overall idea of what is possible with the MySQL plugin. Before you can get started with virtualizing your MySQL databases, there are some pre-requisites you need to take care of. Please visit the Pre-Requisites page for more details. Questions? \u00b6 If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal","title":"Overview"},{"location":"index.html#overview","text":"MySQL plugin has been developed to ingest and virtualize MySQL data sources using Delphix.","title":"Overview"},{"location":"index.html#what-does-mysql-plugin-do","text":"The Delphix MySQL Plugin can virtualize a single instance MySQL database and create multiple virtual copies as required. There are two modes of operation of the plugin based on how the MySQL dSource is created and kept in-sync with source database.","title":"What does MySQL plugin do?"},{"location":"index.html#replication","text":"In the Replication mode, Delphix uses MySQL's built-in replication technology to keep the Delphix dSource in-sync with the MySQL source databases. Creation of the dSource requires a full backup of the source database(s) and there are two options to providing this backup. Delphix Managed Backup In this option, Delphix is provided with the required information to take a full backup of the source database. User Provided Backup In this option, user provides Delphix with an existing full backup. Delphix initializes the staging database using the full backup and configures the staging database as a replicated slave of the source database. MySQL Replication keeps the data in the staging database in-sync with the source.","title":"Replication"},{"location":"index.html#manual-ingestion","text":"In the Manual Ingestion mode, the data in Delphix dSource is managed manually by the end users. Delphix creates a seed MySQL staging database which can be managed via Delphix. The end user assumes the responsibility of keeping the data in the staging database in-sync with the source database.","title":"Manual Ingestion"},{"location":"index.html#where-to-start","text":"By now, you must have an overall idea of what is possible with the MySQL plugin. Before you can get started with virtualizing your MySQL databases, there are some pre-requisites you need to take care of. Please visit the Pre-Requisites page for more details.","title":"Where to Start?"},{"location":"index.html#questions","text":"If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal","title":"Questions?"},{"location":"Discovery.html","text":"Discovery \u00b6 Environment discovery/refresh is a process that enables the MySQL Plugin to determine MySQL installation details on a host. Database discovery/refresh is initiated during the environment set up process. Whenever there is any change (installing a new database home) to an already set up environment in the Delphix application, we need to perform an environment discovery/refresh. Prerequisites \u00b6 Installation of the MySQL Plugin is required before the Discovery. Refreshing an Environment \u00b6 Environment refresh will update the metadata associated with that environment and push Delphix Toolkit on to the host. Login to the Delphix Management application. Click Manage . Select Environments . In the Environments panel, click the name of the environment you want to refresh. Select the Refresh icon. In the Refresh confirmation dialog select Refresh . Once an environment refresh completes successfully, Delphix will discover all MySQL installations on the environment. These installations are referred to as \"repositories\" Add Source Config \u00b6 As noted avove, environments contain repositories , that are MySQL installations in the environment. Each environment may have any number of repositories associated with it. The next step in the virtualization process is to add a SourceConfig . A SourceConfig object defines the configuratino of the dSource and is required to create a dSource. You can create any number of SourceConfig objects using a repository, which represent known database instances. For the MySQL plugin, Source config is must be created manually. How to create Source Config \u00b6 Source Config is created on the Staging Environment Login to the Delphix Management application. Click Manage . Select Environments . Select the repository. Click on + icon (Shown in next image). Add required details in the Add database section. Enter source data directory in section Data Directory . Enter source port number in Port section. Enter MySQL base directory on the source host in Base Directory section. Enter dsource name in MySQL dSource Name section. What's Next? \u00b6 Now that your environments are all added and a Source Config has been created, please proceed to Linking page to see how we can create the dSource.","title":"Discovery"},{"location":"Discovery.html#discovery","text":"Environment discovery/refresh is a process that enables the MySQL Plugin to determine MySQL installation details on a host. Database discovery/refresh is initiated during the environment set up process. Whenever there is any change (installing a new database home) to an already set up environment in the Delphix application, we need to perform an environment discovery/refresh.","title":"Discovery"},{"location":"Discovery.html#prerequisites","text":"Installation of the MySQL Plugin is required before the Discovery.","title":"Prerequisites"},{"location":"Discovery.html#refreshing-an-environment","text":"Environment refresh will update the metadata associated with that environment and push Delphix Toolkit on to the host. Login to the Delphix Management application. Click Manage . Select Environments . In the Environments panel, click the name of the environment you want to refresh. Select the Refresh icon. In the Refresh confirmation dialog select Refresh . Once an environment refresh completes successfully, Delphix will discover all MySQL installations on the environment. These installations are referred to as \"repositories\"","title":"Refreshing an Environment"},{"location":"Discovery.html#add-source-config","text":"As noted avove, environments contain repositories , that are MySQL installations in the environment. Each environment may have any number of repositories associated with it. The next step in the virtualization process is to add a SourceConfig . A SourceConfig object defines the configuratino of the dSource and is required to create a dSource. You can create any number of SourceConfig objects using a repository, which represent known database instances. For the MySQL plugin, Source config is must be created manually.","title":"Add Source Config"},{"location":"Discovery.html#how-to-create-source-config","text":"Source Config is created on the Staging Environment Login to the Delphix Management application. Click Manage . Select Environments . Select the repository. Click on + icon (Shown in next image). Add required details in the Add database section. Enter source data directory in section Data Directory . Enter source port number in Port section. Enter MySQL base directory on the source host in Base Directory section. Enter dsource name in MySQL dSource Name section.","title":"How to create Source Config"},{"location":"Discovery.html#whats-next","text":"Now that your environments are all added and a Source Config has been created, please proceed to Linking page to see how we can create the dSource.","title":"What's Next?"},{"location":"PluginInstallation.html","text":"Plugin Installation \u00b6 Prerequisites \u00b6 Delphix Engine of version 6.0.x Install MySQL Binaries on source, staging, and target servers Installing the MySQL Plugin \u00b6 Method1: Using GUI \u00b6 Click on Manage (present on top-left of this page) and then Plugins . Click on + icon. Click on Upload a plugin. Select the build(artifacts.json) from your device. Click on close button. See the plugin version in Plugins section. Method2: Using dvp command \u00b6 dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Delphix Engine's documentation on installing plugins: PluginManagement .","title":"Plugin Installation"},{"location":"PluginInstallation.html#plugin-installation","text":"","title":"Plugin Installation"},{"location":"PluginInstallation.html#prerequisites","text":"Delphix Engine of version 6.0.x Install MySQL Binaries on source, staging, and target servers","title":"Prerequisites"},{"location":"PluginInstallation.html#installing-the-mysql-plugin","text":"","title":"Installing the MySQL Plugin"},{"location":"PluginInstallation.html#method1-using-gui","text":"Click on Manage (present on top-left of this page) and then Plugins . Click on + icon. Click on Upload a plugin. Select the build(artifacts.json) from your device. Click on close button. See the plugin version in Plugins section.","title":"Method1: Using GUI"},{"location":"PluginInstallation.html#method2-using-dvp-command","text":"dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Delphix Engine's documentation on installing plugins: PluginManagement .","title":"Method2: Using dvp command"},{"location":"Provisioning.html","text":"Provisioning \u00b6 Virtual Databases (VDB) are a virtualized copies of dSource. A VDB can be created using a snapshot on the dSource timeflow. Prerequisites \u00b6 Require a linked dSource with at least 1 snapshot. Require a Target environment added to Delphix. A MySQL binary with the same version as the source db must be installed on the Target enviornment. Warning It may take upto 5 minutes after successful dSource creation for the status to show as Active. Provisioning a VDB \u00b6 On the dSource Timeflow, click on the Provision action on the snapshot that you want to use for the VDB (highlighted below) Select the target host from the dropdown on which VDB needs to be created. If there are multiple MySQL repositories on the host, select the one that matches the source db version. If there are multiple OS users on the host, select the user you want to use. Enter the following values for the target configuration: DB User This is the database user for the VDB. Delphix will use this user to manage the VDB. It is recommended that you use the same user account that was used by the staging db. DB Password Password for the VDB db user. BaseDir MySQL installation directory. This is where the location of /bin/mysql VDB Port MySQL database port for the VDB. VDB Server ID MySQL server id for the VDB. This server id must be non-zero and greater than the dsource server id. Mount Location This is the mount directory for Delphix VDB on the Target host. This location should be unique and empty. On Configuration screen, add VDB name, select Target group, check Auto vFiles Restart checkbox and select Next On Policies screen, add any required policies and select Next . If you want to Mask the VDB, select the required configuration this screen and select Next . On Hooks screen, add any required Hooks and select Next . Preview the summary and select Submit . Once the VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name . And we're done! \u00b6 We have now successfully provisioned a MySQL VDB.","title":"Provisioning"},{"location":"Provisioning.html#provisioning","text":"Virtual Databases (VDB) are a virtualized copies of dSource. A VDB can be created using a snapshot on the dSource timeflow.","title":"Provisioning"},{"location":"Provisioning.html#prerequisites","text":"Require a linked dSource with at least 1 snapshot. Require a Target environment added to Delphix. A MySQL binary with the same version as the source db must be installed on the Target enviornment. Warning It may take upto 5 minutes after successful dSource creation for the status to show as Active.","title":"Prerequisites"},{"location":"Provisioning.html#provisioning-a-vdb","text":"On the dSource Timeflow, click on the Provision action on the snapshot that you want to use for the VDB (highlighted below) Select the target host from the dropdown on which VDB needs to be created. If there are multiple MySQL repositories on the host, select the one that matches the source db version. If there are multiple OS users on the host, select the user you want to use. Enter the following values for the target configuration: DB User This is the database user for the VDB. Delphix will use this user to manage the VDB. It is recommended that you use the same user account that was used by the staging db. DB Password Password for the VDB db user. BaseDir MySQL installation directory. This is where the location of /bin/mysql VDB Port MySQL database port for the VDB. VDB Server ID MySQL server id for the VDB. This server id must be non-zero and greater than the dsource server id. Mount Location This is the mount directory for Delphix VDB on the Target host. This location should be unique and empty. On Configuration screen, add VDB name, select Target group, check Auto vFiles Restart checkbox and select Next On Policies screen, add any required policies and select Next . If you want to Mask the VDB, select the required configuration this screen and select Next . On Hooks screen, add any required Hooks and select Next . Preview the summary and select Submit . Once the VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name .","title":"Provisioning a VDB"},{"location":"Provisioning.html#and-were-done","text":"We have now successfully provisioned a MySQL VDB.","title":"And we're done!"},{"location":"Linking/Manual_Ingestion_Mode.html","text":"Manual Ingestion \u00b6 In Manual Ingestion Mode, Delphix creates a seed (empty) staging database. Customer users will be responsible to manually ingest data into this staging db. All other management operations can be performed through Delphix. A snapshot can be taken either manually or via a SnapSync policy once the data is restored into the seed staging database. Pre-Requisites \u00b6 Staging environment must be added to Delphix. A Source Config must be created on the staging environment-MySQL repository. [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. !!! warning It may take upto 5 minutes after successful dSource creation for the status to show as Active. Creating dSource \u00b6 Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the MySQL source configuration which is created on the staging host. Select Manual Ingestion in the dSource Type dropdown. Provide the additional details required for dsource creation Staging DB Server ID Server ID for the dsource (stagind db. For Replication Mode, this server id must be greater than the source db server id. Staging DB Port Port for the dsource (staging db). Staging Initialization Password Password to use while initializing the dsource (staging db). This password will be assigned to the 'root'@'localhost' MySQL Base Directory MySQL installation directory. This is where the location of /bin/mysql Mount Location on Staging Host This is the mount directory for Delphix on the staging host. This location should be unique and empty. Source DB UserName Delphix db user on the source database. In Manual Ingestion mode, Delphix does not connect to the source db. Delphix will be using this db user to manage the dsource and other time travel operations. This user must be part of the source db backup that will be restored into the staging db. Source DB Password Password for the source db user. On dSource Configuration screen, select the dataset group where the dSource will be placed and click Next . On the Data Management screen, select the staging environment and the environment user and click Next . On the Policies screen, select the Snapsync and Retention policies for the dSource and click Next . On the Hooks screen, add any pre-sync and (or) post-sync hooks as required and click Next . Review the dSource configuration on the Summary screen and Submit. The Linking process has commenced. Once the dSource creation is successful, the Timeflow tab should show the initial snapshot. Info \u00b6 While using Manual Backup Ingestion to create dsource, make sure to ingest the data on the MySQL instance which has been created as a part of dSource creation. Done, What's Next? \u00b6 Alright, we have created a MySQL dSource. Next step - Provision a VDB.","title":"Manual Ingestion"},{"location":"Linking/Manual_Ingestion_Mode.html#manual-ingestion","text":"In Manual Ingestion Mode, Delphix creates a seed (empty) staging database. Customer users will be responsible to manually ingest data into this staging db. All other management operations can be performed through Delphix. A snapshot can be taken either manually or via a SnapSync policy once the data is restored into the seed staging database.","title":"Manual Ingestion"},{"location":"Linking/Manual_Ingestion_Mode.html#pre-requisites","text":"Staging environment must be added to Delphix. A Source Config must be created on the staging environment-MySQL repository. [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. !!! warning It may take upto 5 minutes after successful dSource creation for the status to show as Active.","title":"Pre-Requisites"},{"location":"Linking/Manual_Ingestion_Mode.html#creating-dsource","text":"Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the MySQL source configuration which is created on the staging host. Select Manual Ingestion in the dSource Type dropdown. Provide the additional details required for dsource creation Staging DB Server ID Server ID for the dsource (stagind db. For Replication Mode, this server id must be greater than the source db server id. Staging DB Port Port for the dsource (staging db). Staging Initialization Password Password to use while initializing the dsource (staging db). This password will be assigned to the 'root'@'localhost' MySQL Base Directory MySQL installation directory. This is where the location of /bin/mysql Mount Location on Staging Host This is the mount directory for Delphix on the staging host. This location should be unique and empty. Source DB UserName Delphix db user on the source database. In Manual Ingestion mode, Delphix does not connect to the source db. Delphix will be using this db user to manage the dsource and other time travel operations. This user must be part of the source db backup that will be restored into the staging db. Source DB Password Password for the source db user. On dSource Configuration screen, select the dataset group where the dSource will be placed and click Next . On the Data Management screen, select the staging environment and the environment user and click Next . On the Policies screen, select the Snapsync and Retention policies for the dSource and click Next . On the Hooks screen, add any pre-sync and (or) post-sync hooks as required and click Next . Review the dSource configuration on the Summary screen and Submit. The Linking process has commenced. Once the dSource creation is successful, the Timeflow tab should show the initial snapshot.","title":"Creating dSource"},{"location":"Linking/Manual_Ingestion_Mode.html#info","text":"While using Manual Backup Ingestion to create dsource, make sure to ingest the data on the MySQL instance which has been created as a part of dSource creation.","title":"Info"},{"location":"Linking/Manual_Ingestion_Mode.html#done-whats-next","text":"Alright, we have created a MySQL dSource. Next step - Provision a VDB.","title":"Done, What's Next?"},{"location":"Linking/Replication_Mode.html","text":"Replication \u00b6 In Replication Mode, Delphix creates a staging database using an initial backup from the source database. This initial backup can be taken by Delphix or can be provided by the end user. In order to ensure that the staging database remains in-sync with the source database, Delphix can set up a MySQL native replication. from the source db to the staging db. Pre-Requisites \u00b6 Staging environment must be added to Delphix. A Source Config must be created on the staging environment-MySQL repository. [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. Warning It may take upto 5 minutes after successful dSource creation for the status to show as Active. Creating dSource \u00b6 Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the MySQL source configuration which is created on the staging host. Select Replication in the dSource Type dropdown. Provide the additional details required for dsource creation Staging DB Server ID Server ID for the dsource (stagind db. For Replication Mode, this server id must be greater than the source db server id. Staging DB Port Port for the dsource (staging db). Staging Initialization Password Password to use while initializing the dsource (staging db). This password will be assigned to the 'root'@'localhost' MySQL Base Directory MySQL installation directory. This is where the location of /bin/mysql Mount Location on Staging Host This is the mount directory for Delphix on the staging host. This location should be unique and empty. Source DB Host IP Address IP Address of the source db host. Source DB UserName Delphix db user on the source database. This user will be created in the dsource when the initial backup is restored. Delphix will be using this db user to manage the dsource and other time travel operations. Source DB Password Password for the source db user. Databases List Comma separated list of databases on the source MySQL instance that should be part of the dSource. Default value ALL indicates that all databases on the source instance will be brought in. MySQL Backup Path Full path, including the filename, of the full source db backup to use for the dsource creation. If this is provided, Delphix will not create a backup. LogSync Whether to enable replication or not. If checked, Delphix will set up the dsource (staging db) as a replicated slave of the source database. Replication UserName Delphix DB user with replication privileges to set up replication from source to staging db. Currently, Delphix uses the Source DB user for replication. Replication User Password Password for the replication db user. On dSource Configuration screen, select the dataset group where the dSource will be placed and click Next . On the Data Management screen, select the staging environment and the environment user and click Next . On the Policies screen, select the Snapsync and Retention policies for the dSource and click Next . On the Hooks screen, add any pre-sync and (or) post-sync hooks as required and click Next . Review the dSource configuration on the Summary screen and Submit. The Linking process has commenced. Once the dSource creation is successful, the Timeflow tab should show the initial snapshot. Done, What's Next? \u00b6 Alright, we have created a MySQL dSource. Next step - Provision a VDB.","title":"Replication"},{"location":"Linking/Replication_Mode.html#replication","text":"In Replication Mode, Delphix creates a staging database using an initial backup from the source database. This initial backup can be taken by Delphix or can be provided by the end user. In order to ensure that the staging database remains in-sync with the source database, Delphix can set up a MySQL native replication. from the source db to the staging db.","title":"Replication"},{"location":"Linking/Replication_Mode.html#pre-requisites","text":"Staging environment must be added to Delphix. A Source Config must be created on the staging environment-MySQL repository. [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. Warning It may take upto 5 minutes after successful dSource creation for the status to show as Active.","title":"Pre-Requisites"},{"location":"Linking/Replication_Mode.html#creating-dsource","text":"Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the MySQL source configuration which is created on the staging host. Select Replication in the dSource Type dropdown. Provide the additional details required for dsource creation Staging DB Server ID Server ID for the dsource (stagind db. For Replication Mode, this server id must be greater than the source db server id. Staging DB Port Port for the dsource (staging db). Staging Initialization Password Password to use while initializing the dsource (staging db). This password will be assigned to the 'root'@'localhost' MySQL Base Directory MySQL installation directory. This is where the location of /bin/mysql Mount Location on Staging Host This is the mount directory for Delphix on the staging host. This location should be unique and empty. Source DB Host IP Address IP Address of the source db host. Source DB UserName Delphix db user on the source database. This user will be created in the dsource when the initial backup is restored. Delphix will be using this db user to manage the dsource and other time travel operations. Source DB Password Password for the source db user. Databases List Comma separated list of databases on the source MySQL instance that should be part of the dSource. Default value ALL indicates that all databases on the source instance will be brought in. MySQL Backup Path Full path, including the filename, of the full source db backup to use for the dsource creation. If this is provided, Delphix will not create a backup. LogSync Whether to enable replication or not. If checked, Delphix will set up the dsource (staging db) as a replicated slave of the source database. Replication UserName Delphix DB user with replication privileges to set up replication from source to staging db. Currently, Delphix uses the Source DB user for replication. Replication User Password Password for the replication db user. On dSource Configuration screen, select the dataset group where the dSource will be placed and click Next . On the Data Management screen, select the staging environment and the environment user and click Next . On the Policies screen, select the Snapsync and Retention policies for the dSource and click Next . On the Hooks screen, add any pre-sync and (or) post-sync hooks as required and click Next . Review the dSource configuration on the Summary screen and Submit. The Linking process has commenced. Once the dSource creation is successful, the Timeflow tab should show the initial snapshot.","title":"Creating dSource"},{"location":"Linking/Replication_Mode.html#done-whats-next","text":"Alright, we have created a MySQL dSource. Next step - Provision a VDB.","title":"Done, What's Next?"},{"location":"Pre-Requisites/General.html","text":"General \u00b6 Given below are the general pre-requisites for MySQL virtualization. Environments \u00b6 For MySQL virtualization, Delphix requies only Staging and Target Hosts to be added as environments. Refer to Delphix Docs for configuration best practices. Staging Host/Environment \u00b6 The MySQL plugin is a \"Staged\" plugin - which means that in order to create a dSource, Delphix requires a staging environment. This environment must have MySQL binaries installed and the version of MySQL must match the source MySQL database(s). Target Host/Environment \u00b6 If you are familiar with Delphix, you must already know what a Target Host is. It is simply another host with MySQL binaries installed where Delphix creates virtual databases. Again, the version of MySQL must match your source database(s). Storage \u00b6 Empty folder on Staging & Target host to hold delphix toolkit [ approximate 2GB free space ] If Delphix is managing backups, the Staging Host must have enough storage space to hold your source database backup. MySQL Version \u00b6 MySQL Binary version on Staging and Target must match the version on the source database(s)","title":"General"},{"location":"Pre-Requisites/General.html#general","text":"Given below are the general pre-requisites for MySQL virtualization.","title":"General"},{"location":"Pre-Requisites/General.html#environments","text":"For MySQL virtualization, Delphix requies only Staging and Target Hosts to be added as environments. Refer to Delphix Docs for configuration best practices.","title":"Environments"},{"location":"Pre-Requisites/General.html#staging-hostenvironment","text":"The MySQL plugin is a \"Staged\" plugin - which means that in order to create a dSource, Delphix requires a staging environment. This environment must have MySQL binaries installed and the version of MySQL must match the source MySQL database(s).","title":"Staging Host/Environment"},{"location":"Pre-Requisites/General.html#target-hostenvironment","text":"If you are familiar with Delphix, you must already know what a Target Host is. It is simply another host with MySQL binaries installed where Delphix creates virtual databases. Again, the version of MySQL must match your source database(s).","title":"Target Host/Environment"},{"location":"Pre-Requisites/General.html#storage","text":"Empty folder on Staging & Target host to hold delphix toolkit [ approximate 2GB free space ] If Delphix is managing backups, the Staging Host must have enough storage space to hold your source database backup.","title":"Storage"},{"location":"Pre-Requisites/General.html#mysql-version","text":"MySQL Binary version on Staging and Target must match the version on the source database(s)","title":"MySQL Version"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html","text":"Manual Ingestion \u00b6 Given below are the pre-requisites for MySQL virtualization when using Manual Ingestion mode. Source Environment Requirements \u00b6 Source environment is where the source MySQL databases are running. Source DB User \u00b6 In Manual Ingestion mode, Delphix does not interact with the source database. Delphix creates a staging database and the backups are ingested manually by a customer user. However, Delphix needs to be able to manage this staging database for snapshots and other time travel operations. Hence, we require a user with the following permissions on the staging database. SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER There are 2 ways to achieve this Create this user on your source database so that when the backup is restored, this user is present in the staging db. Create this user manually in the staging db. In this case, the customer user must ensure that this user is always present in the staging db and has the necessary privileges mysql>CREATE USER 'delphix_os'@'localhost' IDENTIFIED BY 'delphix_user_passwd'; 3. Grant the necessary privileges to the user. mysql> GRANT SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER on *.* to 'delphix_os'@'localhost'; You can also grant more permissive privileges mysql>GRANT ALL PRIVILEGES ON *.* TO 'user'@'%'; Note Remember, this is the user that Delphix uses to manage the Staging database. So, if you're using Option#1 above, it is recommended that you create a dedicated source db user for Delphix with the privileges mentioned above. Staging Environment Requirements \u00b6 Staging OS User \u00b6 This is a typical Delphix OS staging user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended. Storage \u00b6 Empty folder on staging host to hold delphix toolkit [ approximate 2GB free space ] MySQL Version & Configuration \u00b6 MySQL Binary version must match the version on the source database(s) Starter my.cnf file [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. if tnis file is not provided, Delphix will create a my.cnf file from scratch. Target Environment Requirements \u00b6 Target OS User \u00b6 This is a typical Delphix OS target user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended. Done, What's Next? \u00b6 Alright, we've taken care of all the pre-requisites. Next step - Install the plugin.","title":"Manual Ingestion"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#manual-ingestion","text":"Given below are the pre-requisites for MySQL virtualization when using Manual Ingestion mode.","title":"Manual Ingestion"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#source-environment-requirements","text":"Source environment is where the source MySQL databases are running.","title":"Source Environment Requirements"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#source-db-user","text":"In Manual Ingestion mode, Delphix does not interact with the source database. Delphix creates a staging database and the backups are ingested manually by a customer user. However, Delphix needs to be able to manage this staging database for snapshots and other time travel operations. Hence, we require a user with the following permissions on the staging database. SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER There are 2 ways to achieve this Create this user on your source database so that when the backup is restored, this user is present in the staging db. Create this user manually in the staging db. In this case, the customer user must ensure that this user is always present in the staging db and has the necessary privileges mysql>CREATE USER 'delphix_os'@'localhost' IDENTIFIED BY 'delphix_user_passwd'; 3. Grant the necessary privileges to the user. mysql> GRANT SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER on *.* to 'delphix_os'@'localhost'; You can also grant more permissive privileges mysql>GRANT ALL PRIVILEGES ON *.* TO 'user'@'%'; Note Remember, this is the user that Delphix uses to manage the Staging database. So, if you're using Option#1 above, it is recommended that you create a dedicated source db user for Delphix with the privileges mentioned above.","title":"Source DB User"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#staging-environment-requirements","text":"","title":"Staging Environment Requirements"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#staging-os-user","text":"This is a typical Delphix OS staging user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended.","title":"Staging OS User"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#storage","text":"Empty folder on staging host to hold delphix toolkit [ approximate 2GB free space ]","title":"Storage"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#mysql-version-configuration","text":"MySQL Binary version must match the version on the source database(s) Starter my.cnf file [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. if tnis file is not provided, Delphix will create a my.cnf file from scratch.","title":"MySQL Version &amp; Configuration"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#target-environment-requirements","text":"","title":"Target Environment Requirements"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#target-os-user","text":"This is a typical Delphix OS target user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended.","title":"Target OS User"},{"location":"Pre-Requisites/Manual_Ingestion_Mode.html#done-whats-next","text":"Alright, we've taken care of all the pre-requisites. Next step - Install the plugin.","title":"Done, What's Next?"},{"location":"Pre-Requisites/Replication_Mode.html","text":"Replication \u00b6 Given below are the pre-requisites for MySQL virtualization when using Replication mode. Source Environment Requirements \u00b6 Source environment is where the source MySQL databases are running. Connectivity \u00b6 Delphix staging user must be able to connect to source environment from staging and take a backup of the source database(s) using the mysqldump utility. Source DB User \u00b6 A Source DB user with the following permissions. Can connect to the source database from staging host as well as locally mysql>CREATE USER 'delphix_os'@'<staging_host>' IDENTIFIED BY 'delphix_user_passwd'; mysql>CREATE USER 'delphix_os'@'localhost' IDENTIFIED BY 'delphix_user_passwd'; Has at the minimum, the following permissions on the source database(s). SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER, REPLICATION CLIENT,REPLICATION SLAVE mysql>GRANT SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER, REPLICATION CLIENT,REPLICATION SLAVE on *.* to 'delphix_os'@'staging-host'; mysql>GRANT SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER on *.* to 'delphix_os'@'localhost'; You can also grant more permissive privileges mysql>GRANT ALL PRIVILEGES ON *.* TO 'user'@'%'; Note Remember, this is the user that Delphix uses to manage the Staging database. So, it is recommended that you create a dedicated source db user for Delphix with the privileges mentioned above. At present, the plugin uses the same source db user for backup and replication. Binary Logging \u00b6 In order to set up replication, binary logging should be enabled on the source database. You can check the status of binary logging as follows mysql> SHOW VARIABLES LIKE 'log_bin'; If binary logging is enabled, you should see the following status +---------------+-------+ | Variable_name | Value | +---------------+-------+ | log_bin | ON | +---------------+-------+ Server-Id \u00b6 The source database must have a non zero server-id. Staging Environment Requirements \u00b6 Staging OS User \u00b6 This is a typical Delphix OS staging user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended. Storage \u00b6 Staging Host must have enough storage space to hold the source backup file. Empty folder on staging host to hold delphix toolkit [ approximate 2GB free space ] MySQL Version & Configuration \u00b6 MySQL Binary version must match the version on the source database(s) [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database. Target Environment Requirements \u00b6 Target OS User \u00b6 This is a typical Delphix OS target user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended. Done, What's Next? \u00b6 Alright, we've taken care of all the pre-requisites. Next step - Install the plugin.","title":"Replication"},{"location":"Pre-Requisites/Replication_Mode.html#replication","text":"Given below are the pre-requisites for MySQL virtualization when using Replication mode.","title":"Replication"},{"location":"Pre-Requisites/Replication_Mode.html#source-environment-requirements","text":"Source environment is where the source MySQL databases are running.","title":"Source Environment Requirements"},{"location":"Pre-Requisites/Replication_Mode.html#connectivity","text":"Delphix staging user must be able to connect to source environment from staging and take a backup of the source database(s) using the mysqldump utility.","title":"Connectivity"},{"location":"Pre-Requisites/Replication_Mode.html#source-db-user","text":"A Source DB user with the following permissions. Can connect to the source database from staging host as well as locally mysql>CREATE USER 'delphix_os'@'<staging_host>' IDENTIFIED BY 'delphix_user_passwd'; mysql>CREATE USER 'delphix_os'@'localhost' IDENTIFIED BY 'delphix_user_passwd'; Has at the minimum, the following permissions on the source database(s). SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER, REPLICATION CLIENT,REPLICATION SLAVE mysql>GRANT SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER, REPLICATION CLIENT,REPLICATION SLAVE on *.* to 'delphix_os'@'staging-host'; mysql>GRANT SELECT, SHUTDOWN, SUPER, RELOAD ,SHOW VIEW, EVENT, TRIGGER on *.* to 'delphix_os'@'localhost'; You can also grant more permissive privileges mysql>GRANT ALL PRIVILEGES ON *.* TO 'user'@'%'; Note Remember, this is the user that Delphix uses to manage the Staging database. So, it is recommended that you create a dedicated source db user for Delphix with the privileges mentioned above. At present, the plugin uses the same source db user for backup and replication.","title":"Source DB User"},{"location":"Pre-Requisites/Replication_Mode.html#binary-logging","text":"In order to set up replication, binary logging should be enabled on the source database. You can check the status of binary logging as follows mysql> SHOW VARIABLES LIKE 'log_bin'; If binary logging is enabled, you should see the following status +---------------+-------+ | Variable_name | Value | +---------------+-------+ | log_bin | ON | +---------------+-------+","title":"Binary Logging"},{"location":"Pre-Requisites/Replication_Mode.html#server-id","text":"The source database must have a non zero server-id.","title":"Server-Id"},{"location":"Pre-Requisites/Replication_Mode.html#staging-environment-requirements","text":"","title":"Staging Environment Requirements"},{"location":"Pre-Requisites/Replication_Mode.html#staging-os-user","text":"This is a typical Delphix OS staging user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended.","title":"Staging OS User"},{"location":"Pre-Requisites/Replication_Mode.html#storage","text":"Staging Host must have enough storage space to hold the source backup file. Empty folder on staging host to hold delphix toolkit [ approximate 2GB free space ]","title":"Storage"},{"location":"Pre-Requisites/Replication_Mode.html#mysql-version-configuration","text":"MySQL Binary version must match the version on the source database(s) [Recommended] As every organization's MySQL configuration is different, Delphix expects a starter my.cnf file to be present in Delphix Toolkit Directory when creating a staging database. Delphix will use this my.cnf file and modify it as per the configuration provided during the the dsource creation process. This is recommended to reduce the possibility of errors while restoring the backup from the source database.","title":"MySQL Version &amp; Configuration"},{"location":"Pre-Requisites/Replication_Mode.html#target-environment-requirements","text":"","title":"Target Environment Requirements"},{"location":"Pre-Requisites/Replication_Mode.html#target-os-user","text":"This is a typical Delphix OS target user. Key requirements for this user are given below. Please refer to Delphix Docs for more detailed requirements. A Delphix OS user with the elevated permissions to run ps, mount, umount, mkdir, rmdir commands without requiring a password /etc/sudoers Defaults: delphix_os ! requiretty delphix_os ALL = NOPASSWD: \\ /bin/ mount , /bin/ umount , /bin/ mkdir , /bin/ rmdir , /bin/ ps Delphix OS user should be in the same primary and secondary groups as mysql user ( or the MySQL binary owner ) Delphix OS user must have execute access on all files within MySQL installation folder - Min permission level 775 recommended.","title":"Target OS User"},{"location":"Pre-Requisites/Replication_Mode.html#done-whats-next","text":"Alright, we've taken care of all the pre-requisites. Next step - Install the plugin.","title":"Done, What's Next?"},{"location":"References/ExitCodes.html","text":"Plugin Exit Codes \u00b6 Detailed below are the exit codes that the MySQL Plugin throws if an error occurs. Exit Codes \u00b6 Code Description Possible Reason 1 General Error Check logs 2 General Error Check logs 3 Unable to start MySQL 1. Delphix user does not have the necessary permissions on the host 2. Mount location provided is in use 3. Database credentials provided are not accurate 4. Invalid serverid 5. Provided port is not in use 4 Missing config file A my.cnf file was not provided and Delphix was unable to create one. 5 Unable to change root password Delphix was unable to change the password for the root user after creating the staging db. Please check logs. 6 Unable to restore backup Delphix was unable to restore the full backup into staging db. Please check logs. 7 Connect failure post restore Delphix is unable to connect to staging db after backup is restored. 1. The Source DB username and password provided may be incorrect 2. The MySQL Database did not restart after the restore. Check logs for more information on the error. 8 Delphix backup failure Delphix could not take a source db backup. 1. Staging Host may not be able to connect to Source Host 2. Source DB credentials may be incorrect 3. Source DB user may not have the required permissions 4. Databases provided in the list may not be present on the source MySQL instance. Check logs for more information on the error. 9 Customer backup failure There was an issue with the customer provided backup. 1. Backup location may not exist. 2. The backup file may not exist 3. Backup file may be empty. Check logs for more information on the error. 10 Invalid binary path mysql was not found under the provided installation directory. 11 Connect failure after restart In Backup Ingestion Mode, the Delphix source user could not connect to the MySQL instance after reboot. Check logs for more information on the error. 12 Unable to create user In Backup Ingestion Mode, there was an error while creating the delphix user after staging db was initialized. Check logs for more information on the error.","title":"Plugin Exit Codes"},{"location":"References/ExitCodes.html#plugin-exit-codes","text":"Detailed below are the exit codes that the MySQL Plugin throws if an error occurs.","title":"Plugin Exit Codes"},{"location":"References/ExitCodes.html#exit-codes","text":"Code Description Possible Reason 1 General Error Check logs 2 General Error Check logs 3 Unable to start MySQL 1. Delphix user does not have the necessary permissions on the host 2. Mount location provided is in use 3. Database credentials provided are not accurate 4. Invalid serverid 5. Provided port is not in use 4 Missing config file A my.cnf file was not provided and Delphix was unable to create one. 5 Unable to change root password Delphix was unable to change the password for the root user after creating the staging db. Please check logs. 6 Unable to restore backup Delphix was unable to restore the full backup into staging db. Please check logs. 7 Connect failure post restore Delphix is unable to connect to staging db after backup is restored. 1. The Source DB username and password provided may be incorrect 2. The MySQL Database did not restart after the restore. Check logs for more information on the error. 8 Delphix backup failure Delphix could not take a source db backup. 1. Staging Host may not be able to connect to Source Host 2. Source DB credentials may be incorrect 3. Source DB user may not have the required permissions 4. Databases provided in the list may not be present on the source MySQL instance. Check logs for more information on the error. 9 Customer backup failure There was an issue with the customer provided backup. 1. Backup location may not exist. 2. The backup file may not exist 3. Backup file may be empty. Check logs for more information on the error. 10 Invalid binary path mysql was not found under the provided installation directory. 11 Connect failure after restart In Backup Ingestion Mode, the Delphix source user could not connect to the MySQL instance after reboot. Check logs for more information on the error. 12 Unable to create user In Backup Ingestion Mode, there was an error while creating the delphix user after staging db was initialized. Check logs for more information on the error.","title":"Exit Codes"},{"location":"References/Troubleshooting.html","text":"Troubleshooting \u00b6 If you run into an error while using the MySQL plugin and have an exit code in the error, refer to ExitCodes for further information. Logs \u00b6 There are 2 sets of logs for the MySQL plugin Plugin Logs Plugin logs are part of the Delphix Engine. Refer to [How to Retrieve Logs] (https://developer.delphix.com/References/Logging/#how-to-retrieve-logs) to find out how to get the Delphix Plugin Logs. MySQL Shell Operation Logs When the plugin performs certain operations ( such as Take backup, Link, Provision etc), logs are written to log files on the staging or target host under the Delphix Toolkit directory Following are the logs to review delphix_mysql_debug.log delphix_mysql_info.log delphix_mysql_error.log Common MySQL Commands \u00b6 Connecting to a MySQL instance delphixos> /usr/bin/mysql -uUserName -pPassword --protocol=TCP --port=1234 List databases in MySQL mysql> show databases; Check replication status in MySQL mysql> show slave status; Check binary logging mysql> SHOW VARIABLES LIKE 'log_bin'; Check user permissions mysql> show grants for 'delphixdb'@'%';","title":"Troubleshooting"},{"location":"References/Troubleshooting.html#troubleshooting","text":"If you run into an error while using the MySQL plugin and have an exit code in the error, refer to ExitCodes for further information.","title":"Troubleshooting"},{"location":"References/Troubleshooting.html#logs","text":"There are 2 sets of logs for the MySQL plugin Plugin Logs Plugin logs are part of the Delphix Engine. Refer to [How to Retrieve Logs] (https://developer.delphix.com/References/Logging/#how-to-retrieve-logs) to find out how to get the Delphix Plugin Logs. MySQL Shell Operation Logs When the plugin performs certain operations ( such as Take backup, Link, Provision etc), logs are written to log files on the staging or target host under the Delphix Toolkit directory Following are the logs to review delphix_mysql_debug.log delphix_mysql_info.log delphix_mysql_error.log","title":"Logs"},{"location":"References/Troubleshooting.html#common-mysql-commands","text":"Connecting to a MySQL instance delphixos> /usr/bin/mysql -uUserName -pPassword --protocol=TCP --port=1234 List databases in MySQL mysql> show databases; Check replication status in MySQL mysql> show slave status; Check binary logging mysql> SHOW VARIABLES LIKE 'log_bin'; Check user permissions mysql> show grants for 'delphixdb'@'%';","title":"Common MySQL Commands"},{"location":"Release_Notes/MySQL_1.0.0.html","text":"MySQL Plugin 1.0.0 \u00b6 To install dxi, refer to Plugin Installation Features \u00b6 MySQLLinux 1.0.0 release is the first release of the Delphix MySQL Plugin. Supported versions \u00b6 The current release supports All MySQL 5.7 versions greater than 5.7.6 RHEL 6.9 / 7.x Delphix Engine 6.0.4 and above Future releases may add support for additional versions. compatibility \u00b6 Forward compatibility is not guaranteed between current version of MySQL plugin and future versions of MySQL. MySQL Plugin may work with future RHEL/CentOS versions, but this is not guaranteed. Questions? \u00b6 If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal","title":"MySQL Plugin 1.0.0"},{"location":"Release_Notes/MySQL_1.0.0.html#mysql-plugin-100","text":"To install dxi, refer to Plugin Installation","title":"MySQL Plugin 1.0.0"},{"location":"Release_Notes/MySQL_1.0.0.html#features","text":"MySQLLinux 1.0.0 release is the first release of the Delphix MySQL Plugin.","title":"Features"},{"location":"Release_Notes/MySQL_1.0.0.html#supported-versions","text":"The current release supports All MySQL 5.7 versions greater than 5.7.6 RHEL 6.9 / 7.x Delphix Engine 6.0.4 and above Future releases may add support for additional versions.","title":"Supported versions"},{"location":"Release_Notes/MySQL_1.0.0.html#compatibility","text":"Forward compatibility is not guaranteed between current version of MySQL plugin and future versions of MySQL. MySQL Plugin may work with future RHEL/CentOS versions, but this is not guaranteed.","title":"compatibility"},{"location":"Release_Notes/MySQL_1.0.0.html#questions","text":"If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal","title":"Questions?"},{"location":"Release_Notes/MySQL_2.0.26.html","text":"MySQL Plugin 2.0.26 \u00b6 To install dxi, refer to Plugin Installation New Features \u00b6 Selecting Databases : Ability to select specific databases in the Source MySQL server when creating a dSource. Delphix generated config file : If a my.cnf file is not provided while creating a dSource, Delphix now creates one. New Exit Return Codes : MySQL Plugin 2.0.26 introduces more granular exit codes for errors. Breaking Changes \u00b6 Removed Simple Tablespace Backup: MySQL Plugin does not support the Simple Tablespace Backup option for Linking. This option may be supported in the future. Supported versions \u00b6 The current release supports All MySQL 5.7 versions greater than 5.7.6 RHEL 6.9 / 7.x Delphix Engine 6.0.4 and above Future releases may add support for additional versions. Questions? \u00b6 If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal","title":"MySQL Plugin 2.0.26"},{"location":"Release_Notes/MySQL_2.0.26.html#mysql-plugin-2026","text":"To install dxi, refer to Plugin Installation","title":"MySQL Plugin 2.0.26"},{"location":"Release_Notes/MySQL_2.0.26.html#new-features","text":"Selecting Databases : Ability to select specific databases in the Source MySQL server when creating a dSource. Delphix generated config file : If a my.cnf file is not provided while creating a dSource, Delphix now creates one. New Exit Return Codes : MySQL Plugin 2.0.26 introduces more granular exit codes for errors.","title":"New Features"},{"location":"Release_Notes/MySQL_2.0.26.html#breaking-changes","text":"Removed Simple Tablespace Backup: MySQL Plugin does not support the Simple Tablespace Backup option for Linking. This option may be supported in the future.","title":"Breaking Changes"},{"location":"Release_Notes/MySQL_2.0.26.html#supported-versions","text":"The current release supports All MySQL 5.7 versions greater than 5.7.6 RHEL 6.9 / 7.x Delphix Engine 6.0.4 and above Future releases may add support for additional versions.","title":"Supported versions"},{"location":"Release_Notes/MySQL_2.0.26.html#questions","text":"If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal","title":"Questions?"},{"location":"Release_Notes/MySQL_2.1.0.html","text":"MySQL Plugin 2.1.0 \u00b6 What's New? \u00b6 The MySQL plugin 2.1.0 release includes security improvements. To install dxi, refer to Plugin Installation . Plugin/Delphix Engine Compatibility \u00b6 MySQL plugin version 1.0.0 and 2.2.26 are compatible with Delphix Engines version 6.0.4 , 6.0.5 , and 6.0.6 . MySQL plugin version 2.1.0 is compatible with Delphix Engines version 6.0.7 and above . Supported DBMS Version \u00b6 MySQL plugin version 1.0.0 , 2.2.26 , and 2.1.0 are compatible with MySQL DBMS versions 5.7.x . Supported OS \u00b6 MySQL plugin version 1.0.0 , 2.2.26 , and 2.1.0 are compatible with RHEL versions 6.9 / 7.x . Future releases may add support for additional versions. Compatibility \u00b6 Forward compatibility is not guaranteed between current version of MySQL plugin and future versions of MySQL. MySQL Plugin may work with future RHEL/CentOS versions, but this is not guaranteed. Questions? \u00b6 If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal .","title":"MySQL Plugin 2.1.0"},{"location":"Release_Notes/MySQL_2.1.0.html#mysql-plugin-210","text":"","title":"MySQL Plugin 2.1.0"},{"location":"Release_Notes/MySQL_2.1.0.html#whats-new","text":"The MySQL plugin 2.1.0 release includes security improvements. To install dxi, refer to Plugin Installation .","title":"What's New?"},{"location":"Release_Notes/MySQL_2.1.0.html#plugindelphix-engine-compatibility","text":"MySQL plugin version 1.0.0 and 2.2.26 are compatible with Delphix Engines version 6.0.4 , 6.0.5 , and 6.0.6 . MySQL plugin version 2.1.0 is compatible with Delphix Engines version 6.0.7 and above .","title":"Plugin/Delphix Engine Compatibility"},{"location":"Release_Notes/MySQL_2.1.0.html#supported-dbms-version","text":"MySQL plugin version 1.0.0 , 2.2.26 , and 2.1.0 are compatible with MySQL DBMS versions 5.7.x .","title":"Supported DBMS Version"},{"location":"Release_Notes/MySQL_2.1.0.html#supported-os","text":"MySQL plugin version 1.0.0 , 2.2.26 , and 2.1.0 are compatible with RHEL versions 6.9 / 7.x . Future releases may add support for additional versions.","title":"Supported OS"},{"location":"Release_Notes/MySQL_2.1.0.html#compatibility","text":"Forward compatibility is not guaranteed between current version of MySQL plugin and future versions of MySQL. MySQL Plugin may work with future RHEL/CentOS versions, but this is not guaranteed.","title":"Compatibility"},{"location":"Release_Notes/MySQL_2.1.0.html#questions","text":"If you have questions, bugs or feature requests reach out to us via the MySQL Github or at Delphix Community Portal .","title":"Questions?"}]}